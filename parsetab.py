
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'PROGRAMAleftPLUSMINUSAND BIGGER_THAN CLOSING_BRACES CLOSING_BRACKET CLOSING_PARENTH COMA COMMENT CONSTANT DIVISION DO DOUBLE ELSE EQUAL EQUAL_EQUAL FOR FUNCTION ID IF INT LOWER_THAN MAIN MINUS MINUSMINUS MULTIPLY NOT NOT_EQUAL OPEN_BRACES OPEN_BRACKET OPEN_PARENTH OR PLUS PLUSPLUS PRINT READ SEMICOLON STRING WHILE\n\tPROGRAMA : VAR FUNC M\n\t\n\tVAR : TIPO DECLARE SEMICOLON\n\t\t| TIPO MAT SEMICOLON\n\t\t| VAR TIPO DECLARE SEMICOLON\n\t\t| VAR TIPO MAT SEMICOLON\n\t\t|\n\t\n\tDECLARE : ID\n\t\t\t| DECLARE COMA ID\n\t\t\t| ASSIGN\n\t\t\t| DECLARE COMA ASSIGN\n\t\n\tASSIGN : ID EQUAL EA\n\t\n\tFUNC : FUNCTION ID OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES\n\t\t| FUNC FUNCTION ID OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES\n\t\t|\n\t\n\tM    : MAIN OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES\n\t\n\tTIPO : INT\n\t\t| DOUBLE\n\t\n\tS : STATEMENTS\n\t| S STATEMENTS\n\t|\n\t\n\tSTATEMENTS : VAR \n\t\t\t| IDSTAT\n\t\t\t| PRINTSTAT\n\t\t\t| READSTAT\n\t\t\t| IFSTAT\n\t\t\t| WHILESTAT\n\t\t\t| DOSTAT\n\t\t\t| FORSTAT\n\t\t\t| FUNCSTAT\n\t\t\t| INC_STAT\n\t\t\t| \n\t\n\tIDSTAT : ASSIGN SEMICOLON\n\t\t\n\t\n\tPRINTSTAT : PRINT OPEN_PARENTH EA CLOSING_PARENTH SEMICOLON\n\t\t\t| PRINT OPEN_PARENTH STRING CLOSING_PARENTH SEMICOLON\n\t\n\tREADSTAT : READ OPEN_PARENTH EA CLOSING_PARENTH SEMICOLON\n\t\n\tIFSTAT : IF OPEN_PARENTH EL CLOSING_PARENTH IF_AUX1 IN_S IF_AUX3\n\t\t| IF OPEN_PARENTH EL CLOSING_PARENTH IF_AUX1 IN_S ELSE IF_AUX2 IN_S IF_AUX3\n\t\n\tIF_AUX1 : empty\n\t\n\tIF_AUX2 : empty\n\t\n\tIF_AUX3 : empty\n\tempty :\n\tWHILESTAT : WHILE OPEN_PARENTH EL CLOSING_PARENTH IN_S\n\t\n\tDOSTAT : DO IN_S WHILE OPEN_PARENTH EL CLOSING_PARENTH SEMICOLON\n\t\n\tFORSTAT : FOR OPEN_PARENTH ID EQUAL EA SEMICOLON EL SEMICOLON ID EQUAL EA CLOSING_PARENTH IN_S\n\t\n\tFUNCSTAT : ID OPEN_PARENTH CLOSING_PARENTH SEMICOLON\n\t\n\tINC_STAT : ID PLUSPLUS SEMICOLON\n\t\t\t| ID MINUSMINUS SEMICOLON\n\t\n\tIN_S : OPEN_BRACES S CLOSING_BRACES\n\t\n\tEA : TA\n\t| EA PLUS TA\n\t| EA MINUS TA\n\t\n\tFA  : CONSTANT\n\t\t| ID\n\t\t| MAT\n\t\t| OPEN_PARENTH EA CLOSING_PARENTH\n\t\n\tTA : FA\n\t| TA MULTIPLY FA\n\t| TA DIVISION FA\n\t\n\tEL : TL\n\t| EL OR TL\n\t\n\tTL : FL\n\t| TL AND FL\n\t\n\tFL : NL OPERATORS NL\n\t| EA OPERATORS EA\n\t| NL\n\t| OPEN_PARENTH EL CLOSING_PARENTH\n\t\n\tNL : NOT EL\n\t\n\tOPERATORS : NOT_EQUAL\n\t\t\t| LOWER_THAN\n\t\t\t| BIGGER_THAN\n\t\t\t| EQUAL_EQUAL\n\t\n\tMAT : ID MAT_BRACKET\n\t\n\tMAT_BRACKET : OPEN_BRACKET CONSTANT CLOSING_BRACKET\n\t\t\t\t| MAT_BRACKET OPEN_BRACKET CONSTANT CLOSING_BRACKET\n\t\t\t\t| OPEN_BRACKET ID CLOSING_BRACKET\n\t\t\t\t| MAT_BRACKET OPEN_BRACKET ID CLOSING_BRACKET\n\t'
    
_lr_action_items = {'OPEN_BRACKET':([12,23,41,45,46,57,58,],[22,34,22,-73,-75,-74,-76,]),'IF':([19,20,28,29,54,56,64,66,67,68,69,70,72,73,76,77,82,83,84,85,88,95,97,99,108,109,116,131,137,146,148,149,150,152,156,157,159,163,165,169,],[-3,-2,-4,-5,65,65,-28,65,-30,-27,-29,-23,-25,-21,-24,-18,-26,-22,65,65,-19,-32,65,65,-46,-47,65,-45,-48,-42,-33,-34,-35,-41,-36,-40,-43,-41,-37,-44,]),'OR':([23,35,37,38,40,41,45,46,57,58,59,60,61,62,63,101,103,106,107,111,125,127,139,140,141,142,145,151,158,],[-72,-49,-54,-52,-56,-53,-73,-75,-74,-76,-57,-58,-51,-50,-55,-61,-65,128,-59,128,128,128,-64,-63,-66,-60,-62,128,128,]),'LOWER_THAN':([23,35,37,38,40,41,45,46,57,58,59,60,61,62,63,101,102,103,107,125,126,139,140,141,142,145,],[-72,-49,-54,-52,-56,-53,-73,-75,-74,-76,-57,-58,-51,-50,-55,-61,123,123,-59,-67,123,-64,-63,-66,-60,-62,]),'EQUAL':([12,31,71,112,164,],[24,24,24,133,166,]),'EQUAL_EQUAL':([23,35,37,38,40,41,45,46,57,58,59,60,61,62,63,101,102,103,107,125,126,139,140,141,142,145,],[-72,-49,-54,-52,-56,-53,-73,-75,-74,-76,-57,-58,-51,-50,-55,-61,119,119,-59,-67,119,-64,-63,-66,-60,-62,]),'INT':([0,2,19,20,28,29,54,56,64,66,67,68,69,70,72,73,76,77,82,83,84,85,88,95,97,99,108,109,116,131,137,146,148,149,150,152,156,157,159,163,165,169,],[1,1,-3,-2,-4,-5,1,1,-28,1,-30,-27,-29,-23,-25,1,-24,-18,-26,-22,1,1,-19,-32,1,1,-46,-47,1,-45,-48,-42,-33,-34,-35,-41,-36,-40,-43,-41,-37,-44,]),'AND':([23,35,37,38,40,41,45,46,57,58,59,60,61,62,63,101,103,107,125,139,140,141,142,145,],[-72,-49,-54,-52,-56,-53,-73,-75,-74,-76,-57,-58,-51,-50,-55,-61,-65,130,-67,-64,-63,-66,130,-62,]),'PLUSPLUS':([71,],[89,]),'$end':([4,14,87,],[0,-1,-15,]),'SEMICOLON':([9,10,11,12,17,18,23,30,31,35,36,37,38,40,41,45,46,57,58,59,60,61,62,63,79,89,90,101,103,107,110,125,134,135,136,139,140,141,142,145,147,154,158,],[-9,19,20,-7,28,29,-72,-10,-8,-49,-11,-54,-52,-56,-53,-73,-75,-74,-76,-57,-58,-51,-50,-55,95,108,109,-61,-65,-59,131,-67,148,149,150,-64,-63,-66,-60,-62,153,159,162,]),'CLOSING_PARENTH':([23,25,27,35,37,38,40,41,43,45,46,53,57,58,59,60,61,62,63,91,101,103,106,107,111,113,114,115,125,126,127,139,140,141,142,145,151,167,],[-72,42,44,-49,-54,-52,-56,-53,55,-73,-75,63,-74,-76,-57,-58,-51,-50,-55,110,-61,-65,129,-59,132,134,135,136,-67,63,141,-64,-63,-66,-60,-62,154,168,]),'CLOSING_BRACES':([19,20,28,29,54,56,64,66,67,68,69,70,72,73,76,77,82,83,84,85,88,95,97,99,108,109,116,131,137,146,148,149,150,152,156,157,159,163,165,169,],[-3,-2,-4,-5,-6,-6,-28,87,-30,-27,-29,-23,-25,-21,-24,-18,-26,-22,-6,100,-19,-32,-6,118,-46,-47,137,-45,-48,-42,-33,-34,-35,-41,-36,-40,-43,-41,-37,-44,]),'NOT':([86,92,104,105,119,120,122,123,124,128,130,138,153,],[104,104,104,104,-71,-68,-70,-69,104,104,104,104,104,]),'MINUS':([23,35,36,37,38,40,41,45,46,53,57,58,59,60,61,62,63,102,113,115,126,139,147,167,],[-72,-49,51,-54,-52,-56,-53,-73,-75,51,-74,-76,-57,-58,-51,-50,-55,51,51,51,51,51,51,51,]),'ID':([1,3,5,7,8,15,19,20,21,22,24,28,29,34,39,49,50,51,52,54,56,64,66,67,68,69,70,72,73,76,77,82,83,84,85,86,88,92,93,94,95,96,97,99,104,105,108,109,116,119,120,121,122,123,128,130,131,133,137,138,146,148,149,150,152,153,156,157,159,162,163,165,166,169,],[-16,12,-17,16,12,26,-3,-2,31,33,41,-4,-5,48,41,41,41,41,41,71,71,-28,71,-30,-27,-29,-23,-25,-21,-24,-18,-26,-22,71,71,41,-19,41,112,41,-32,41,71,71,41,41,-46,-47,71,-71,-68,41,-70,-69,41,41,-45,41,-48,41,-42,-33,-34,-35,-41,41,-36,-40,-43,164,-41,-37,41,-44,]),'DOUBLE':([0,2,19,20,28,29,54,56,64,66,67,68,69,70,72,73,76,77,82,83,84,85,88,95,97,99,108,109,116,131,137,146,148,149,150,152,156,157,159,163,165,169,],[5,5,-3,-2,-4,-5,5,5,-28,5,-30,-27,-29,-23,-25,5,-24,-18,-26,-22,5,5,-19,-32,5,5,-46,-47,5,-45,-48,-42,-33,-34,-35,-41,-36,-40,-43,-41,-37,-44,]),'NOT_EQUAL':([23,35,37,38,40,41,45,46,57,58,59,60,61,62,63,101,102,103,107,125,126,139,140,141,142,145,],[-72,-49,-54,-52,-56,-53,-73,-75,-74,-76,-57,-58,-51,-50,-55,-61,120,120,-59,-67,120,-64,-63,-66,-60,-62,]),'BIGGER_THAN':([23,35,37,38,40,41,45,46,57,58,59,60,61,62,63,101,102,103,107,125,126,139,140,141,142,145,],[-72,-49,-54,-52,-56,-53,-73,-75,-74,-76,-57,-58,-51,-50,-55,-61,122,122,-59,-67,122,-64,-63,-66,-60,-62,]),'FOR':([19,20,28,29,54,56,64,66,67,68,69,70,72,73,76,77,82,83,84,85,88,95,97,99,108,109,116,131,137,146,148,149,150,152,156,157,159,163,165,169,],[-3,-2,-4,-5,75,75,-28,75,-30,-27,-29,-23,-25,-21,-24,-18,-26,-22,75,75,-19,-32,75,75,-46,-47,75,-45,-48,-42,-33,-34,-35,-41,-36,-40,-43,-41,-37,-44,]),'MAIN':([0,2,6,19,20,28,29,100,118,],[-6,-14,13,-3,-2,-4,-5,-12,-13,]),'CLOSING_BRACKET':([32,33,47,48,],[45,46,57,58,]),'ELSE':([137,152,],[-48,155,]),'PRINT':([19,20,28,29,54,56,64,66,67,68,69,70,72,73,76,77,82,83,84,85,88,95,97,99,108,109,116,131,137,146,148,149,150,152,156,157,159,163,165,169,],[-3,-2,-4,-5,78,78,-28,78,-30,-27,-29,-23,-25,-21,-24,-18,-26,-22,78,78,-19,-32,78,78,-46,-47,78,-45,-48,-42,-33,-34,-35,-41,-36,-40,-43,-41,-37,-44,]),'FUNCTION':([0,2,6,19,20,28,29,100,118,],[-6,7,15,-3,-2,-4,-5,-12,-13,]),'READ':([19,20,28,29,54,56,64,66,67,68,69,70,72,73,76,77,82,83,84,85,88,95,97,99,108,109,116,131,137,146,148,149,150,152,156,157,159,163,165,169,],[-3,-2,-4,-5,80,80,-28,80,-30,-27,-29,-23,-25,-21,-24,-18,-26,-22,80,80,-19,-32,80,80,-46,-47,80,-45,-48,-42,-33,-34,-35,-41,-36,-40,-43,-41,-37,-44,]),'PLUS':([23,35,36,37,38,40,41,45,46,53,57,58,59,60,61,62,63,102,113,115,126,139,147,167,],[-72,-49,52,-54,-52,-56,-53,-73,-75,52,-74,-76,-57,-58,-51,-50,-55,52,52,52,52,52,52,52,]),'OPEN_BRACES':([42,44,55,81,129,132,143,144,155,160,161,168,],[54,56,84,97,-41,97,97,-38,-41,97,-39,97,]),'STRING':([94,],[114,]),'MINUSMINUS':([71,],[90,]),'DIVISION':([23,35,37,38,40,41,45,46,57,58,59,60,61,62,63,],[-72,50,-54,-52,-56,-53,-73,-75,-74,-76,-57,-58,50,50,-55,]),'CONSTANT':([22,24,34,39,49,50,51,52,86,92,94,96,104,105,119,120,121,122,123,128,130,133,138,153,166,],[32,38,47,38,38,38,38,38,38,38,38,38,38,38,-71,-68,38,-70,-69,38,38,38,38,38,38,]),'WHILE':([19,20,28,29,54,56,64,66,67,68,69,70,72,73,76,77,82,83,84,85,88,95,97,98,99,108,109,116,131,137,146,148,149,150,152,156,157,159,163,165,169,],[-3,-2,-4,-5,74,74,-28,74,-30,-27,-29,-23,-25,-21,-24,-18,-26,-22,74,74,-19,-32,74,117,74,-46,-47,74,-45,-48,-42,-33,-34,-35,-41,-36,-40,-43,-41,-37,-44,]),'OPEN_PARENTH':([13,16,24,26,39,49,50,51,52,65,71,74,75,78,80,86,92,94,96,104,105,117,119,120,121,122,123,128,130,133,138,153,166,],[25,27,39,43,39,39,39,39,39,86,91,92,93,94,96,105,105,39,39,105,105,138,-71,-68,39,-70,-69,105,105,39,105,105,39,]),'DO':([19,20,28,29,54,56,64,66,67,68,69,70,72,73,76,77,82,83,84,85,88,95,97,99,108,109,116,131,137,146,148,149,150,152,156,157,159,163,165,169,],[-3,-2,-4,-5,81,81,-28,81,-30,-27,-29,-23,-25,-21,-24,-18,-26,-22,81,81,-19,-32,81,81,-46,-47,81,-45,-48,-42,-33,-34,-35,-41,-36,-40,-43,-41,-37,-44,]),'COMA':([9,11,12,17,23,30,31,35,36,37,38,40,41,45,46,57,58,59,60,61,62,63,],[-9,21,-7,21,-72,-10,-8,-49,-11,-54,-52,-56,-53,-73,-75,-74,-76,-57,-58,-51,-50,-55,]),'MULTIPLY':([23,35,37,38,40,41,45,46,57,58,59,60,61,62,63,],[-72,49,-54,-52,-56,-53,-73,-75,-74,-76,-57,-58,49,49,-55,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FORSTAT':([54,56,66,84,85,97,99,116,],[64,64,64,64,64,64,64,64,]),'NL':([86,92,104,105,124,128,130,138,153,],[103,103,103,103,140,103,103,103,103,]),'FUNC':([2,],[6,]),'FL':([86,92,104,105,128,130,138,153,],[101,101,101,101,101,145,101,101,]),'EA':([24,39,86,92,94,96,104,105,121,128,130,133,138,153,166,],[36,53,102,102,113,115,102,126,139,102,102,147,102,102,167,]),'empty':([129,152,155,163,],[144,157,161,157,]),'TL':([86,92,104,105,128,138,153,],[107,107,107,107,142,107,107,]),'M':([6,],[14,]),'MAT_BRACKET':([12,41,],[23,23,]),'S':([54,56,84,97,],[66,85,99,116,]),'INC_STAT':([54,56,66,84,85,97,99,116,],[67,67,67,67,67,67,67,67,]),'FUNCSTAT':([54,56,66,84,85,97,99,116,],[69,69,69,69,69,69,69,69,]),'ASSIGN':([3,8,21,54,56,66,84,85,97,99,116,],[9,9,30,79,79,79,79,79,79,79,79,]),'TIPO':([0,2,54,56,66,73,84,85,97,99,116,],[3,8,3,3,3,8,3,3,3,3,3,]),'IF_AUX3':([152,163,],[156,165,]),'PROGRAMA':([0,],[4,]),'PRINTSTAT':([54,56,66,84,85,97,99,116,],[70,70,70,70,70,70,70,70,]),'IFSTAT':([54,56,66,84,85,97,99,116,],[72,72,72,72,72,72,72,72,]),'IF_AUX2':([155,],[160,]),'VAR':([0,54,56,66,84,85,97,99,116,],[2,73,73,73,73,73,73,73,73,]),'TA':([24,39,51,52,86,92,94,96,104,105,121,128,130,133,138,153,166,],[35,35,61,62,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'READSTAT':([54,56,66,84,85,97,99,116,],[76,76,76,76,76,76,76,76,]),'STATEMENTS':([54,56,66,84,85,97,99,116,],[77,77,88,77,88,77,88,88,]),'MAT':([3,8,24,39,49,50,51,52,86,92,94,96,104,105,121,128,130,133,138,153,166,],[10,18,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'OPERATORS':([102,103,126,],[121,124,121,]),'DOSTAT':([54,56,66,84,85,97,99,116,],[68,68,68,68,68,68,68,68,]),'IN_S':([81,132,143,160,168,],[98,146,152,163,169,]),'EL':([86,92,104,105,138,153,],[106,111,125,127,151,158,]),'DECLARE':([3,8,],[11,17,]),'WHILESTAT':([54,56,66,84,85,97,99,116,],[82,82,82,82,82,82,82,82,]),'FA':([24,39,49,50,51,52,86,92,94,96,104,105,121,128,130,133,138,153,166,],[40,40,59,60,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'IF_AUX1':([129,],[143,]),'IDSTAT':([54,56,66,84,85,97,99,116,],[83,83,83,83,83,83,83,83,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> VAR FUNC M','PROGRAMA',3,'p_PROGRAMA','main.py',278),
  ('VAR -> TIPO DECLARE SEMICOLON','VAR',3,'p_VAR','main.py',284),
  ('VAR -> TIPO MAT SEMICOLON','VAR',3,'p_VAR','main.py',285),
  ('VAR -> VAR TIPO DECLARE SEMICOLON','VAR',4,'p_VAR','main.py',286),
  ('VAR -> VAR TIPO MAT SEMICOLON','VAR',4,'p_VAR','main.py',287),
  ('VAR -> <empty>','VAR',0,'p_VAR','main.py',288),
  ('DECLARE -> ID','DECLARE',1,'p_DECLARE','main.py',304),
  ('DECLARE -> DECLARE COMA ID','DECLARE',3,'p_DECLARE','main.py',305),
  ('DECLARE -> ASSIGN','DECLARE',1,'p_DECLARE','main.py',306),
  ('DECLARE -> DECLARE COMA ASSIGN','DECLARE',3,'p_DECLARE','main.py',307),
  ('ASSIGN -> ID EQUAL EA','ASSIGN',3,'p_ASSIGN','main.py',324),
  ('FUNC -> FUNCTION ID OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES','FUNC',7,'p_FUNC','main.py',342),
  ('FUNC -> FUNC FUNCTION ID OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES','FUNC',8,'p_FUNC','main.py',343),
  ('FUNC -> <empty>','FUNC',0,'p_FUNC','main.py',344),
  ('M -> MAIN OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES','M',6,'p_M','main.py',349),
  ('TIPO -> INT','TIPO',1,'p_TIPO','main.py',353),
  ('TIPO -> DOUBLE','TIPO',1,'p_TIPO','main.py',354),
  ('S -> STATEMENTS','S',1,'p_S','main.py',366),
  ('S -> S STATEMENTS','S',2,'p_S','main.py',367),
  ('S -> <empty>','S',0,'p_S','main.py',368),
  ('STATEMENTS -> VAR','STATEMENTS',1,'p_STATEMENTS','main.py',372),
  ('STATEMENTS -> IDSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',373),
  ('STATEMENTS -> PRINTSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',374),
  ('STATEMENTS -> READSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',375),
  ('STATEMENTS -> IFSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',376),
  ('STATEMENTS -> WHILESTAT','STATEMENTS',1,'p_STATEMENTS','main.py',377),
  ('STATEMENTS -> DOSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',378),
  ('STATEMENTS -> FORSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',379),
  ('STATEMENTS -> FUNCSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',380),
  ('STATEMENTS -> INC_STAT','STATEMENTS',1,'p_STATEMENTS','main.py',381),
  ('STATEMENTS -> <empty>','STATEMENTS',0,'p_STATEMENTS','main.py',382),
  ('IDSTAT -> ASSIGN SEMICOLON','IDSTAT',2,'p_IDSTAT','main.py',387),
  ('PRINTSTAT -> PRINT OPEN_PARENTH EA CLOSING_PARENTH SEMICOLON','PRINTSTAT',5,'p_PRINTSTAT','main.py',393),
  ('PRINTSTAT -> PRINT OPEN_PARENTH STRING CLOSING_PARENTH SEMICOLON','PRINTSTAT',5,'p_PRINTSTAT','main.py',394),
  ('READSTAT -> READ OPEN_PARENTH EA CLOSING_PARENTH SEMICOLON','READSTAT',5,'p_READSTAT','main.py',399),
  ('IFSTAT -> IF OPEN_PARENTH EL CLOSING_PARENTH IF_AUX1 IN_S IF_AUX3','IFSTAT',7,'p_IFSTAT','main.py',404),
  ('IFSTAT -> IF OPEN_PARENTH EL CLOSING_PARENTH IF_AUX1 IN_S ELSE IF_AUX2 IN_S IF_AUX3','IFSTAT',10,'p_IFSTAT','main.py',405),
  ('IF_AUX1 -> empty','IF_AUX1',1,'p_IF_AUX1','main.py',411),
  ('IF_AUX2 -> empty','IF_AUX2',1,'p_IF_AUX2','main.py',429),
  ('IF_AUX3 -> empty','IF_AUX3',1,'p_IF_AUX3','main.py',442),
  ('empty -> <empty>','empty',0,'p_empty','main.py',452),
  ('WHILESTAT -> WHILE OPEN_PARENTH EL CLOSING_PARENTH IN_S','WHILESTAT',5,'p_WHILESTAT','main.py',457),
  ('DOSTAT -> DO IN_S WHILE OPEN_PARENTH EL CLOSING_PARENTH SEMICOLON','DOSTAT',7,'p_DOSTAT','main.py',462),
  ('FORSTAT -> FOR OPEN_PARENTH ID EQUAL EA SEMICOLON EL SEMICOLON ID EQUAL EA CLOSING_PARENTH IN_S','FORSTAT',13,'p_FORSTAT','main.py',467),
  ('FUNCSTAT -> ID OPEN_PARENTH CLOSING_PARENTH SEMICOLON','FUNCSTAT',4,'p_FUNCSTAT','main.py',473),
  ('INC_STAT -> ID PLUSPLUS SEMICOLON','INC_STAT',3,'p_INC_STAT','main.py',478),
  ('INC_STAT -> ID MINUSMINUS SEMICOLON','INC_STAT',3,'p_INC_STAT','main.py',479),
  ('IN_S -> OPEN_BRACES S CLOSING_BRACES','IN_S',3,'p_IN_S','main.py',484),
  ('EA -> TA','EA',1,'p_EA','main.py',491),
  ('EA -> EA PLUS TA','EA',3,'p_EA','main.py',492),
  ('EA -> EA MINUS TA','EA',3,'p_EA','main.py',493),
  ('FA -> CONSTANT','FA',1,'p_FA','main.py',529),
  ('FA -> ID','FA',1,'p_FA','main.py',530),
  ('FA -> MAT','FA',1,'p_FA','main.py',531),
  ('FA -> OPEN_PARENTH EA CLOSING_PARENTH','FA',3,'p_FA','main.py',532),
  ('TA -> FA','TA',1,'p_TA','main.py',552),
  ('TA -> TA MULTIPLY FA','TA',3,'p_TA','main.py',553),
  ('TA -> TA DIVISION FA','TA',3,'p_TA','main.py',554),
  ('EL -> TL','EL',1,'p_EL','main.py',590),
  ('EL -> EL OR TL','EL',3,'p_EL','main.py',591),
  ('TL -> FL','TL',1,'p_TL','main.py',620),
  ('TL -> TL AND FL','TL',3,'p_TL','main.py',621),
  ('FL -> NL OPERATORS NL','FL',3,'p_FL','main.py',646),
  ('FL -> EA OPERATORS EA','FL',3,'p_FL','main.py',647),
  ('FL -> NL','FL',1,'p_FL','main.py',648),
  ('FL -> OPEN_PARENTH EL CLOSING_PARENTH','FL',3,'p_FL','main.py',649),
  ('NL -> NOT EL','NL',2,'p_NL','main.py',700),
  ('OPERATORS -> NOT_EQUAL','OPERATORS',1,'p_OPERATORS','main.py',723),
  ('OPERATORS -> LOWER_THAN','OPERATORS',1,'p_OPERATORS','main.py',724),
  ('OPERATORS -> BIGGER_THAN','OPERATORS',1,'p_OPERATORS','main.py',725),
  ('OPERATORS -> EQUAL_EQUAL','OPERATORS',1,'p_OPERATORS','main.py',726),
  ('MAT -> ID MAT_BRACKET','MAT',2,'p_MAT','main.py',732),
  ('MAT_BRACKET -> OPEN_BRACKET CONSTANT CLOSING_BRACKET','MAT_BRACKET',3,'p_MAT_BRACKET','main.py',739),
  ('MAT_BRACKET -> MAT_BRACKET OPEN_BRACKET CONSTANT CLOSING_BRACKET','MAT_BRACKET',4,'p_MAT_BRACKET','main.py',740),
  ('MAT_BRACKET -> OPEN_BRACKET ID CLOSING_BRACKET','MAT_BRACKET',3,'p_MAT_BRACKET','main.py',741),
  ('MAT_BRACKET -> MAT_BRACKET OPEN_BRACKET ID CLOSING_BRACKET','MAT_BRACKET',4,'p_MAT_BRACKET','main.py',742),
]
