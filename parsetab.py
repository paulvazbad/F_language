
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'PROGRAMAleftPLUSMINUSAND BIGGER_THAN CLOSING_BRACES CLOSING_BRACKET CLOSING_PARENTH COMA COMMENT CONSTANT DIVISION DO DOUBLE ELSE EQUAL EQUAL_EQUAL FOR FUNCTION ID IF INT LOWER_THAN MAIN MINUS MINUSMINUS MULTIPLY NOT NOT_EQUAL OPEN_BRACES OPEN_BRACKET OPEN_PARENTH OR PLUS PLUSPLUS PRINT READ SEMICOLON STRING WHILE\n\tPROGRAMA : VAR FUNC M\n\t\n\tVAR : TIPO DECLARE SEMICOLON\n\t\t| TIPO MAT SEMICOLON\n\t\t| VAR TIPO DECLARE SEMICOLON\n\t\t| VAR TIPO MAT SEMICOLON\n\t\t|\n\t\n\tDECLARE : ID\n\t\t\t| DECLARE COMA ID\n\t\t\t| ASSIGN\n\t\t\t| DECLARE COMA ASSIGN\n\t\n\tASSIGN : ID EQUAL EA\n\t\n\tFUNC : FUNCTION ID OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES\n\t\t| FUNC FUNCTION ID OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES\n\t\t|\n\t\n\tM    : MAIN OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES\n\t\n\tTIPO : INT\n\t\t| DOUBLE\n\t\n\tS : STATEMENTS\n\t| S STATEMENTS\n\t|\n\t\n\tSTATEMENTS : VAR \n\t\t\t| IDSTAT\n\t\t\t| PRINTSTAT\n\t\t\t| READSTAT\n\t\t\t| IFSTAT\n\t\t\t| WHILESTAT\n\t\t\t| DOSTAT\n\t\t\t| FORSTAT\n\t\t\t| FUNCSTAT\n\t\t\t| INC_STAT\n\t\t\t| \n\t\n\tIDSTAT : ASSIGN SEMICOLON\n\t\t\n\t\n\tPRINTSTAT : PRINT OPEN_PARENTH EA CLOSING_PARENTH SEMICOLON\n\t\t\t| PRINT OPEN_PARENTH STRING CLOSING_PARENTH SEMICOLON\n\t\n\tREADSTAT : READ OPEN_PARENTH EA CLOSING_PARENTH SEMICOLON\n\t\n\tIFSTAT : IF OPEN_PARENTH EL CLOSING_PARENTH IF_AUX1 IN_S IF_AUX3\n\t\t| IF OPEN_PARENTH EL CLOSING_PARENTH IF_AUX1 IN_S ELSE IF_AUX2 IN_S IF_AUX3\n\t\n\tIF_AUX1 : empty\n\t\n\tIF_AUX2 : empty\n\t\n\tIF_AUX3 : empty\n\tempty :\n\tWHILESTAT : WHILE WHILE_AUX_1 OPEN_PARENTH EL CLOSING_PARENTH WHILE_AUX_2 IN_S\n\t\n\tWHILE_AUX_1 : empty\n\t\n\tWHILE_AUX_2 : empty\n\t\n\tDOSTAT : DO IN_S WHILE OPEN_PARENTH EL CLOSING_PARENTH SEMICOLON\n\t\n\tFORSTAT : FOR OPEN_PARENTH ID EQUAL EA SEMICOLON EL SEMICOLON ID EQUAL EA CLOSING_PARENTH IN_S\n\t\n\tFUNCSTAT : ID OPEN_PARENTH CLOSING_PARENTH SEMICOLON\n\t\n\tINC_STAT : ID PLUSPLUS SEMICOLON\n\t\t\t| ID MINUSMINUS SEMICOLON\n\t\n\tIN_S : OPEN_BRACES S CLOSING_BRACES\n\t\n\tEA : TA\n\t| EA PLUS TA\n\t| EA MINUS TA\n\t\n\tFA  : CONSTANT\n\t\t| ID\n\t\t| MAT\n\t\t| OPEN_PARENTH EA CLOSING_PARENTH\n\t\n\tTA : FA\n\t| TA MULTIPLY FA\n\t| TA DIVISION FA\n\t\n\tEL : TL\n\t| EL OR TL\n\t\n\tTL : FL\n\t| TL AND FL\n\t\n\tFL : NL OPERATORS NL\n\t| EA OPERATORS EA\n\t| NL\n\t| OPEN_PARENTH EL CLOSING_PARENTH\n\t\n\tNL : NOT EL\n\t\n\tOPERATORS : NOT_EQUAL\n\t\t\t| LOWER_THAN\n\t\t\t| BIGGER_THAN\n\t\t\t| EQUAL_EQUAL\n\t\n\tMAT : ID MAT_BRACKET\n\t\n\tMAT_BRACKET : OPEN_BRACKET CONSTANT CLOSING_BRACKET\n\t\t\t\t| MAT_BRACKET OPEN_BRACKET CONSTANT CLOSING_BRACKET\n\t\t\t\t| OPEN_BRACKET ID CLOSING_BRACKET\n\t\t\t\t| MAT_BRACKET OPEN_BRACKET ID CLOSING_BRACKET\n\t'
    
_lr_action_items = {'OPEN_BRACES':([52,53,61,84,135,143,148,149,153,154,161,164,165,172,],[62,63,64,99,-41,-41,-38,99,-44,99,-41,-39,99,99,]),'FUNCTION':([0,3,10,16,18,39,40,101,102,],[-6,12,19,-3,-2,-5,-4,-12,-13,]),'PLUSPLUS':([74,],[92,]),'WHILE':([16,18,39,40,62,63,64,65,66,68,70,71,72,73,75,78,80,82,83,85,86,88,94,99,100,107,108,118,123,138,140,141,142,155,158,159,160,163,167,169,173,],[-3,-2,-5,-4,77,77,77,-27,77,-26,-22,-28,-24,-30,-25,-29,-23,-18,-21,77,77,-19,-32,77,119,-48,-49,77,-47,-50,-35,-34,-33,-41,-42,-36,-40,-45,-41,-37,-46,]),'SEMICOLON':([6,7,8,9,15,22,23,27,28,29,30,31,32,35,36,42,43,54,55,56,57,58,59,60,76,92,93,106,110,112,114,120,121,122,131,144,145,146,147,150,151,157,162,],[-7,-9,16,18,-74,39,40,-51,-58,-54,-55,-56,-11,-10,-8,-77,-75,-60,-59,-52,-53,-57,-78,-76,94,107,108,123,-63,-61,-67,140,141,142,-69,-66,-64,-65,-68,-62,156,163,166,]),'EQUAL_EQUAL':([15,27,28,29,30,31,42,43,54,55,56,57,58,59,60,110,111,112,114,131,134,144,145,146,147,150,],[-74,-51,-58,-54,-55,-56,-77,-75,-60,-59,-52,-53,-57,-78,-76,-63,125,-61,125,-69,125,-66,-64,-65,-68,-62,]),'MULTIPLY':([15,27,28,29,30,31,42,43,54,55,56,57,58,59,60,],[-74,45,-58,-54,-55,-56,-77,-75,-60,-59,45,45,-57,-78,-76,]),'INT':([0,3,16,18,39,40,62,63,64,65,66,68,70,71,72,73,75,78,80,82,83,85,86,88,94,99,107,108,118,123,138,140,141,142,155,158,159,160,163,167,169,173,],[5,5,-3,-2,-5,-4,5,5,5,-27,5,-26,-22,-28,-24,-30,-25,-29,-23,-18,5,5,5,-19,-32,5,-48,-49,5,-47,-50,-35,-34,-33,-41,-42,-36,-40,-45,-41,-37,-46,]),'CLOSING_BRACES':([16,18,39,40,62,63,64,65,66,68,70,71,72,73,75,78,80,82,83,85,86,88,94,99,107,108,118,123,138,140,141,142,155,158,159,160,163,167,169,173,],[-3,-2,-5,-4,-6,-6,-6,-27,87,-26,-22,-28,-24,-30,-25,-29,-23,-18,-21,101,102,-19,-32,-6,-48,-49,138,-47,-50,-35,-34,-33,-41,-42,-36,-40,-45,-41,-37,-46,]),'MAIN':([0,3,10,16,18,39,40,101,102,],[-6,-14,20,-3,-2,-5,-4,-12,-13,]),'DOUBLE':([0,3,16,18,39,40,62,63,64,65,66,68,70,71,72,73,75,78,80,82,83,85,86,88,94,99,107,108,118,123,138,140,141,142,155,158,159,160,163,167,169,173,],[2,2,-3,-2,-5,-4,2,2,2,-27,2,-26,-22,-28,-24,-30,-25,-29,-23,-18,2,2,2,-19,-32,2,-48,-49,2,-47,-50,-35,-34,-33,-41,-42,-36,-40,-45,-41,-37,-46,]),'BIGGER_THAN':([15,27,28,29,30,31,42,43,54,55,56,57,58,59,60,110,111,112,114,131,134,144,145,146,147,150,],[-74,-51,-58,-54,-55,-56,-77,-75,-60,-59,-52,-53,-57,-78,-76,-63,126,-61,126,-69,126,-66,-64,-65,-68,-62,]),'CLOSING_BRACKET':([25,26,49,50,],[42,43,59,60,]),'PLUS':([15,27,28,29,30,31,32,42,43,48,54,55,56,57,58,59,60,103,105,111,134,144,151,171,],[-74,-51,-58,-54,-55,-56,46,-77,-75,46,-60,-59,-52,-53,-57,-78,-76,46,46,46,46,46,46,46,]),'COMA':([6,7,9,15,23,27,28,29,30,31,32,35,36,42,43,54,55,56,57,58,59,60,],[-7,-9,17,-74,17,-51,-58,-54,-55,-56,-11,-10,-8,-77,-75,-60,-59,-52,-53,-57,-78,-76,]),'IF':([16,18,39,40,62,63,64,65,66,68,70,71,72,73,75,78,80,82,83,85,86,88,94,99,107,108,118,123,138,140,141,142,155,158,159,160,163,167,169,173,],[-3,-2,-5,-4,79,79,79,-27,79,-26,-22,-28,-24,-30,-25,-29,-23,-18,-21,79,79,-19,-32,79,-48,-49,79,-47,-50,-35,-34,-33,-41,-42,-36,-40,-45,-41,-37,-46,]),'CLOSING_PARENTH':([15,27,28,29,30,31,38,41,42,43,48,51,54,55,56,57,58,59,60,91,103,104,105,110,112,114,116,124,131,133,134,144,145,146,147,150,152,171,],[-74,-51,-58,-54,-55,-56,52,53,-77,-75,58,61,-60,-59,-52,-53,-57,-78,-76,106,120,121,122,-63,-61,-67,135,143,-69,147,58,-66,-64,-65,-68,-62,157,172,]),'READ':([16,18,39,40,62,63,64,65,66,68,70,71,72,73,75,78,80,82,83,85,86,88,94,99,107,108,118,123,138,140,141,142,155,158,159,160,163,167,169,173,],[-3,-2,-5,-4,67,67,67,-27,67,-26,-22,-28,-24,-30,-25,-29,-23,-18,-21,67,67,-19,-32,67,-48,-49,67,-47,-50,-35,-34,-33,-41,-42,-36,-40,-45,-41,-37,-46,]),'MINUSMINUS':([74,],[93,]),'NOT_EQUAL':([15,27,28,29,30,31,42,43,54,55,56,57,58,59,60,110,111,112,114,131,134,144,145,146,147,150,],[-74,-51,-58,-54,-55,-56,-77,-75,-60,-59,-52,-53,-57,-78,-76,-63,129,-61,129,-69,129,-66,-64,-65,-68,-62,]),'PRINT':([16,18,39,40,62,63,64,65,66,68,70,71,72,73,75,78,80,82,83,85,86,88,94,99,107,108,118,123,138,140,141,142,155,158,159,160,163,167,169,173,],[-3,-2,-5,-4,69,69,69,-27,69,-26,-22,-28,-24,-30,-25,-29,-23,-18,-21,69,69,-19,-32,69,-48,-49,69,-47,-50,-35,-34,-33,-41,-42,-36,-40,-45,-41,-37,-46,]),'NOT':([97,109,113,115,125,126,128,129,130,132,136,139,156,],[113,113,113,113,-73,-72,-71,-70,113,113,113,113,113,]),'ELSE':([138,155,],[-50,161,]),'STRING':([90,],[104,]),'CONSTANT':([13,14,33,34,44,45,46,47,89,90,97,109,113,115,125,126,127,128,129,130,136,137,139,156,170,],[26,29,29,50,29,29,29,29,29,29,29,29,29,29,-73,-72,29,-71,-70,29,29,29,29,29,29,]),'FOR':([16,18,39,40,62,63,64,65,66,68,70,71,72,73,75,78,80,82,83,85,86,88,94,99,107,108,118,123,138,140,141,142,155,158,159,160,163,167,169,173,],[-3,-2,-5,-4,81,81,81,-27,81,-26,-22,-28,-24,-30,-25,-29,-23,-18,-21,81,81,-19,-32,81,-48,-49,81,-47,-50,-35,-34,-33,-41,-42,-36,-40,-45,-41,-37,-46,]),'AND':([15,27,28,29,30,31,42,43,54,55,56,57,58,59,60,110,112,114,131,144,145,146,147,150,],[-74,-51,-58,-54,-55,-56,-77,-75,-60,-59,-52,-53,-57,-78,-76,-63,130,-67,-69,-66,-64,-65,-68,130,]),'LOWER_THAN':([15,27,28,29,30,31,42,43,54,55,56,57,58,59,60,110,111,112,114,131,134,144,145,146,147,150,],[-74,-51,-58,-54,-55,-56,-77,-75,-60,-59,-52,-53,-57,-78,-76,-63,128,-61,128,-69,128,-66,-64,-65,-68,-62,]),'OPEN_BRACKET':([6,15,30,42,43,59,60,],[13,34,13,-77,-75,-78,-76,]),'DO':([16,18,39,40,62,63,64,65,66,68,70,71,72,73,75,78,80,82,83,85,86,88,94,99,107,108,118,123,138,140,141,142,155,158,159,160,163,167,169,173,],[-3,-2,-5,-4,84,84,84,-27,84,-26,-22,-28,-24,-30,-25,-29,-23,-18,-21,84,84,-19,-32,84,-48,-49,84,-47,-50,-35,-34,-33,-41,-42,-36,-40,-45,-41,-37,-46,]),'EQUAL':([6,36,74,117,168,],[14,14,14,137,170,]),'$end':([4,21,87,],[0,-1,-15,]),'ID':([1,2,5,11,12,13,14,16,17,18,19,33,34,39,40,44,45,46,47,62,63,64,65,66,68,70,71,72,73,75,78,80,82,83,85,86,88,89,90,94,97,98,99,107,108,109,113,115,118,123,125,126,127,128,129,130,136,137,138,139,140,141,142,155,156,158,159,160,163,166,167,169,170,173,],[6,-17,-16,6,24,25,30,-3,36,-2,37,30,49,-5,-4,30,30,30,30,74,74,74,-27,74,-26,-22,-28,-24,-30,-25,-29,-23,-18,-21,74,74,-19,30,30,-32,30,117,74,-48,-49,30,30,30,74,-47,-73,-72,30,-71,-70,30,30,30,-50,30,-35,-34,-33,-41,30,-42,-36,-40,-45,168,-41,-37,30,-46,]),'MINUS':([15,27,28,29,30,31,32,42,43,48,54,55,56,57,58,59,60,103,105,111,134,144,151,171,],[-74,-51,-58,-54,-55,-56,47,-77,-75,47,-60,-59,-52,-53,-57,-78,-76,47,47,47,47,47,47,47,]),'OR':([15,27,28,29,30,31,42,43,54,55,56,57,58,59,60,110,112,114,116,124,131,133,144,145,146,147,150,152,162,],[-74,-51,-58,-54,-55,-56,-77,-75,-60,-59,-52,-53,-57,-78,-76,-63,-61,-67,136,136,136,136,-66,-64,-65,-68,-62,136,136,]),'DIVISION':([15,27,28,29,30,31,42,43,54,55,56,57,58,59,60,],[-74,44,-58,-54,-55,-56,-77,-75,-60,-59,44,44,-57,-78,-76,]),'OPEN_PARENTH':([14,20,24,33,37,44,45,46,47,67,69,74,77,79,81,89,90,95,96,97,109,113,115,119,125,126,127,128,129,130,136,137,139,156,170,],[33,38,41,33,51,33,33,33,33,89,90,91,-41,97,98,33,33,109,-43,115,115,115,115,139,-73,-72,33,-71,-70,115,115,33,115,115,33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FUNC':([3,],[10,]),'FA':([14,33,44,45,46,47,89,90,97,109,113,115,127,130,136,137,139,156,170,],[28,28,54,55,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'ASSIGN':([1,11,17,62,63,64,66,85,86,99,118,],[7,7,35,76,76,76,76,76,76,76,76,]),'empty':([77,135,143,155,161,167,],[96,148,153,160,164,160,]),'DECLARE':([1,11,],[9,23,]),'IF_AUX3':([155,167,],[159,169,]),'FUNCSTAT':([62,63,64,66,85,86,99,118,],[78,78,78,78,78,78,78,78,]),'S':([62,63,64,99,],[66,85,86,118,]),'TL':([97,109,113,115,136,139,156,],[112,112,112,112,150,112,112,]),'MAT':([1,11,14,33,44,45,46,47,89,90,97,109,113,115,127,130,136,137,139,156,170,],[8,22,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'M':([10,],[21,]),'OPERATORS':([111,114,134,],[127,132,127,]),'IDSTAT':([62,63,64,66,85,86,99,118,],[70,70,70,70,70,70,70,70,]),'WHILESTAT':([62,63,64,66,85,86,99,118,],[68,68,68,68,68,68,68,68,]),'EA':([14,33,89,90,97,109,113,115,127,130,136,137,139,156,170,],[32,48,103,105,111,111,111,134,144,111,111,151,111,111,171,]),'IN_S':([84,149,154,165,172,],[100,155,158,167,173,]),'TIPO':([0,3,62,63,64,66,83,85,86,99,118,],[1,11,1,1,1,1,11,1,1,1,1,]),'FL':([97,109,113,115,130,136,139,156,],[110,110,110,110,145,110,110,110,]),'MAT_BRACKET':([6,30,],[15,15,]),'WHILE_AUX_1':([77,],[95,]),'PRINTSTAT':([62,63,64,66,85,86,99,118,],[80,80,80,80,80,80,80,80,]),'EL':([97,109,113,115,139,156,],[116,124,131,133,152,162,]),'FORSTAT':([62,63,64,66,85,86,99,118,],[71,71,71,71,71,71,71,71,]),'READSTAT':([62,63,64,66,85,86,99,118,],[72,72,72,72,72,72,72,72,]),'VAR':([0,62,63,64,66,85,86,99,118,],[3,83,83,83,83,83,83,83,83,]),'TA':([14,33,46,47,89,90,97,109,113,115,127,130,136,137,139,156,170,],[27,27,56,57,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'IF_AUX1':([135,],[149,]),'WHILE_AUX_2':([143,],[154,]),'INC_STAT':([62,63,64,66,85,86,99,118,],[73,73,73,73,73,73,73,73,]),'NL':([97,109,113,115,130,132,136,139,156,],[114,114,114,114,114,146,114,114,114,]),'PROGRAMA':([0,],[4,]),'STATEMENTS':([62,63,64,66,85,86,99,118,],[82,82,82,88,88,88,82,88,]),'IFSTAT':([62,63,64,66,85,86,99,118,],[75,75,75,75,75,75,75,75,]),'DOSTAT':([62,63,64,66,85,86,99,118,],[65,65,65,65,65,65,65,65,]),'IF_AUX2':([161,],[165,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> VAR FUNC M','PROGRAMA',3,'p_PROGRAMA','main.py',282),
  ('VAR -> TIPO DECLARE SEMICOLON','VAR',3,'p_VAR','main.py',288),
  ('VAR -> TIPO MAT SEMICOLON','VAR',3,'p_VAR','main.py',289),
  ('VAR -> VAR TIPO DECLARE SEMICOLON','VAR',4,'p_VAR','main.py',290),
  ('VAR -> VAR TIPO MAT SEMICOLON','VAR',4,'p_VAR','main.py',291),
  ('VAR -> <empty>','VAR',0,'p_VAR','main.py',292),
  ('DECLARE -> ID','DECLARE',1,'p_DECLARE','main.py',308),
  ('DECLARE -> DECLARE COMA ID','DECLARE',3,'p_DECLARE','main.py',309),
  ('DECLARE -> ASSIGN','DECLARE',1,'p_DECLARE','main.py',310),
  ('DECLARE -> DECLARE COMA ASSIGN','DECLARE',3,'p_DECLARE','main.py',311),
  ('ASSIGN -> ID EQUAL EA','ASSIGN',3,'p_ASSIGN','main.py',328),
  ('FUNC -> FUNCTION ID OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES','FUNC',7,'p_FUNC','main.py',346),
  ('FUNC -> FUNC FUNCTION ID OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES','FUNC',8,'p_FUNC','main.py',347),
  ('FUNC -> <empty>','FUNC',0,'p_FUNC','main.py',348),
  ('M -> MAIN OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES','M',6,'p_M','main.py',353),
  ('TIPO -> INT','TIPO',1,'p_TIPO','main.py',357),
  ('TIPO -> DOUBLE','TIPO',1,'p_TIPO','main.py',358),
  ('S -> STATEMENTS','S',1,'p_S','main.py',370),
  ('S -> S STATEMENTS','S',2,'p_S','main.py',371),
  ('S -> <empty>','S',0,'p_S','main.py',372),
  ('STATEMENTS -> VAR','STATEMENTS',1,'p_STATEMENTS','main.py',376),
  ('STATEMENTS -> IDSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',377),
  ('STATEMENTS -> PRINTSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',378),
  ('STATEMENTS -> READSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',379),
  ('STATEMENTS -> IFSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',380),
  ('STATEMENTS -> WHILESTAT','STATEMENTS',1,'p_STATEMENTS','main.py',381),
  ('STATEMENTS -> DOSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',382),
  ('STATEMENTS -> FORSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',383),
  ('STATEMENTS -> FUNCSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',384),
  ('STATEMENTS -> INC_STAT','STATEMENTS',1,'p_STATEMENTS','main.py',385),
  ('STATEMENTS -> <empty>','STATEMENTS',0,'p_STATEMENTS','main.py',386),
  ('IDSTAT -> ASSIGN SEMICOLON','IDSTAT',2,'p_IDSTAT','main.py',391),
  ('PRINTSTAT -> PRINT OPEN_PARENTH EA CLOSING_PARENTH SEMICOLON','PRINTSTAT',5,'p_PRINTSTAT','main.py',397),
  ('PRINTSTAT -> PRINT OPEN_PARENTH STRING CLOSING_PARENTH SEMICOLON','PRINTSTAT',5,'p_PRINTSTAT','main.py',398),
  ('READSTAT -> READ OPEN_PARENTH EA CLOSING_PARENTH SEMICOLON','READSTAT',5,'p_READSTAT','main.py',403),
  ('IFSTAT -> IF OPEN_PARENTH EL CLOSING_PARENTH IF_AUX1 IN_S IF_AUX3','IFSTAT',7,'p_IFSTAT','main.py',408),
  ('IFSTAT -> IF OPEN_PARENTH EL CLOSING_PARENTH IF_AUX1 IN_S ELSE IF_AUX2 IN_S IF_AUX3','IFSTAT',10,'p_IFSTAT','main.py',409),
  ('IF_AUX1 -> empty','IF_AUX1',1,'p_IF_AUX1','main.py',415),
  ('IF_AUX2 -> empty','IF_AUX2',1,'p_IF_AUX2','main.py',436),
  ('IF_AUX3 -> empty','IF_AUX3',1,'p_IF_AUX3','main.py',450),
  ('empty -> <empty>','empty',0,'p_empty','main.py',461),
  ('WHILESTAT -> WHILE WHILE_AUX_1 OPEN_PARENTH EL CLOSING_PARENTH WHILE_AUX_2 IN_S','WHILESTAT',7,'p_WHILESTAT','main.py',466),
  ('WHILE_AUX_1 -> empty','WHILE_AUX_1',1,'p_WHILE_AUX_1','main.py',484),
  ('WHILE_AUX_2 -> empty','WHILE_AUX_2',1,'p_WHILE_AUX_2','main.py',494),
  ('DOSTAT -> DO IN_S WHILE OPEN_PARENTH EL CLOSING_PARENTH SEMICOLON','DOSTAT',7,'p_DOSTAT','main.py',512),
  ('FORSTAT -> FOR OPEN_PARENTH ID EQUAL EA SEMICOLON EL SEMICOLON ID EQUAL EA CLOSING_PARENTH IN_S','FORSTAT',13,'p_FORSTAT','main.py',517),
  ('FUNCSTAT -> ID OPEN_PARENTH CLOSING_PARENTH SEMICOLON','FUNCSTAT',4,'p_FUNCSTAT','main.py',523),
  ('INC_STAT -> ID PLUSPLUS SEMICOLON','INC_STAT',3,'p_INC_STAT','main.py',528),
  ('INC_STAT -> ID MINUSMINUS SEMICOLON','INC_STAT',3,'p_INC_STAT','main.py',529),
  ('IN_S -> OPEN_BRACES S CLOSING_BRACES','IN_S',3,'p_IN_S','main.py',534),
  ('EA -> TA','EA',1,'p_EA','main.py',541),
  ('EA -> EA PLUS TA','EA',3,'p_EA','main.py',542),
  ('EA -> EA MINUS TA','EA',3,'p_EA','main.py',543),
  ('FA -> CONSTANT','FA',1,'p_FA','main.py',579),
  ('FA -> ID','FA',1,'p_FA','main.py',580),
  ('FA -> MAT','FA',1,'p_FA','main.py',581),
  ('FA -> OPEN_PARENTH EA CLOSING_PARENTH','FA',3,'p_FA','main.py',582),
  ('TA -> FA','TA',1,'p_TA','main.py',602),
  ('TA -> TA MULTIPLY FA','TA',3,'p_TA','main.py',603),
  ('TA -> TA DIVISION FA','TA',3,'p_TA','main.py',604),
  ('EL -> TL','EL',1,'p_EL','main.py',640),
  ('EL -> EL OR TL','EL',3,'p_EL','main.py',641),
  ('TL -> FL','TL',1,'p_TL','main.py',670),
  ('TL -> TL AND FL','TL',3,'p_TL','main.py',671),
  ('FL -> NL OPERATORS NL','FL',3,'p_FL','main.py',696),
  ('FL -> EA OPERATORS EA','FL',3,'p_FL','main.py',697),
  ('FL -> NL','FL',1,'p_FL','main.py',698),
  ('FL -> OPEN_PARENTH EL CLOSING_PARENTH','FL',3,'p_FL','main.py',699),
  ('NL -> NOT EL','NL',2,'p_NL','main.py',750),
  ('OPERATORS -> NOT_EQUAL','OPERATORS',1,'p_OPERATORS','main.py',773),
  ('OPERATORS -> LOWER_THAN','OPERATORS',1,'p_OPERATORS','main.py',774),
  ('OPERATORS -> BIGGER_THAN','OPERATORS',1,'p_OPERATORS','main.py',775),
  ('OPERATORS -> EQUAL_EQUAL','OPERATORS',1,'p_OPERATORS','main.py',776),
  ('MAT -> ID MAT_BRACKET','MAT',2,'p_MAT','main.py',782),
  ('MAT_BRACKET -> OPEN_BRACKET CONSTANT CLOSING_BRACKET','MAT_BRACKET',3,'p_MAT_BRACKET','main.py',789),
  ('MAT_BRACKET -> MAT_BRACKET OPEN_BRACKET CONSTANT CLOSING_BRACKET','MAT_BRACKET',4,'p_MAT_BRACKET','main.py',790),
  ('MAT_BRACKET -> OPEN_BRACKET ID CLOSING_BRACKET','MAT_BRACKET',3,'p_MAT_BRACKET','main.py',791),
  ('MAT_BRACKET -> MAT_BRACKET OPEN_BRACKET ID CLOSING_BRACKET','MAT_BRACKET',4,'p_MAT_BRACKET','main.py',792),
]
