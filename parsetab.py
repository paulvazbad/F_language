
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'PROGRAMAleftPLUSMINUSAND BIGGER_THAN CLOSING_BRACES CLOSING_BRACKET CLOSING_PARENTH COMA COMMENT CONSTANT DIVISION DO DOUBLE ELSE EQUAL EQUAL_EQUAL FOR FUNCTION ID IF INT LOWER_THAN MAIN MINUS MINUSMINUS MULTIPLY NOT NOT_EQUAL OPEN_BRACES OPEN_BRACKET OPEN_PARENTH OR PLUS PLUSPLUS PRINT READ SEMICOLON STRING WHILE\n\tPROGRAMA : VAR FUNC M\n\t\n\tVAR : TIPO DECLARE SEMICOLON\n\t\t| TIPO MAT SEMICOLON\n\t\t| VAR TIPO DECLARE SEMICOLON\n\t\t| VAR TIPO MAT SEMICOLON\n\t\t|\n\t\n\tDECLARE : ID\n\t\t\t| DECLARE COMA ID\n\t\t\t| ASSIGN\n\t\t\t| DECLARE COMA ASSIGN\n\t\n\tASSIGN : ID EQUAL EA\n\t\n\tFUNC : FUNCTION ID OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES\n\t\t| FUNC FUNCTION ID OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES\n\t\t|\n\t\n\tM    : MAIN OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES\n\t\n\tTIPO : INT\n\t\t| DOUBLE\n\t\n\tS : STATEMENTS\n\t| S STATEMENTS\n\t|\n\t\n\tSTATEMENTS : VAR \n\t\t\t| IDSTAT\n\t\t\t| PRINTSTAT\n\t\t\t| READSTAT\n\t\t\t| IFSTAT\n\t\t\t| WHILESTAT\n\t\t\t| DOSTAT\n\t\t\t| FORSTAT\n\t\t\t| FUNCSTAT\n\t\t\t| INC_STAT\n\t\t\t| \n\t\n\tIDSTAT : ASSIGN SEMICOLON\n\t\t\n\t\n\tPRINTSTAT : PRINT OPEN_PARENTH EA CLOSING_PARENTH SEMICOLON\n\t\t\t| PRINT OPEN_PARENTH STRING CLOSING_PARENTH SEMICOLON\n\t\n\tREADSTAT : READ OPEN_PARENTH EA CLOSING_PARENTH SEMICOLON\n\t\n\tIFSTAT : IF OPEN_PARENTH EL CLOSING_PARENTH IF_AUX1 IN_S IF_AUX3\n\t\t| IF OPEN_PARENTH EL CLOSING_PARENTH IF_AUX1 IN_S ELSE IF_AUX2 IN_S IF_AUX3\n\t\n\tIF_AUX1 : empty\n\t\n\tIF_AUX2 : empty\n\t\n\tIF_AUX3 : empty\n\tempty :\n\tWHILESTAT : WHILE WHILE_AUX_1 OPEN_PARENTH EL CLOSING_PARENTH WHILE_AUX_2 IN_S\n\t\n\tWHILE_AUX_1 : empty\n\t\n\tWHILE_AUX_2 : empty\n\t\n\tDOSTAT : DO WHILE_AUX_1 IN_S WHILE OPEN_PARENTH EL CLOSING_PARENTH SEMICOLON\n\t\n\tFORSTAT : FOR OPEN_PARENTH ID EQUAL EA SEMICOLON EL SEMICOLON ID EQUAL EA CLOSING_PARENTH IN_S\n\t\n\tFUNCSTAT : ID OPEN_PARENTH CLOSING_PARENTH SEMICOLON\n\t\n\tINC_STAT : ID PLUSPLUS SEMICOLON\n\t\t\t| ID MINUSMINUS SEMICOLON\n\t\n\tIN_S : OPEN_BRACES S CLOSING_BRACES\n\t\n\tEA : TA\n\t| EA PLUS TA\n\t| EA MINUS TA\n\t\n\tFA  : CONSTANT\n\t\t| ID\n\t\t| MAT\n\t\t| OPEN_PARENTH EA CLOSING_PARENTH\n\t\n\tTA : FA\n\t| TA MULTIPLY FA\n\t| TA DIVISION FA\n\t\n\tEL : TL\n\t| EL OR TL\n\t\n\tTL : FL\n\t| TL AND FL\n\t\n\tFL : NL OPERATORS NL\n\t| EA OPERATORS EA\n\t| NL\n\t| OPEN_PARENTH EL CLOSING_PARENTH\n\t\n\tNL : NOT EL\n\t\n\tOPERATORS : NOT_EQUAL\n\t\t\t| LOWER_THAN\n\t\t\t| BIGGER_THAN\n\t\t\t| EQUAL_EQUAL\n\t\n\tMAT : ID MAT_BRACKET\n\t\n\tMAT_BRACKET : OPEN_BRACKET CONSTANT CLOSING_BRACKET\n\t\t\t\t| MAT_BRACKET OPEN_BRACKET CONSTANT CLOSING_BRACKET\n\t\t\t\t| OPEN_BRACKET ID CLOSING_BRACKET\n\t\t\t\t| MAT_BRACKET OPEN_BRACKET ID CLOSING_BRACKET\n\t'
    
_lr_action_items = {'READ':([17,18,37,38,61,62,66,67,70,71,72,74,75,78,79,80,81,83,84,85,90,95,100,102,104,106,120,122,140,150,151,152,156,158,160,161,164,168,170,174,],[-2,-3,-4,-5,77,77,77,-21,-26,-22,-27,-25,-23,-30,-28,-24,-18,-29,77,77,-19,-32,77,77,-48,-49,77,-47,-50,-35,-33,-34,-41,-42,-40,-36,-45,-41,-37,-46,]),'DIVISION':([15,26,27,28,29,31,47,48,54,55,56,57,58,59,60,],[-74,45,-55,-54,-58,-56,-77,-75,45,45,-59,-60,-57,-78,-76,]),'EQUAL':([6,35,68,114,169,],[13,13,13,135,171,]),'OPEN_BRACES':([51,52,63,65,87,88,134,139,147,148,153,154,162,165,166,173,],[61,62,85,-41,-43,102,-41,-41,-38,102,-44,102,-41,-39,102,102,]),'LOWER_THAN':([15,26,27,28,29,31,47,48,54,55,56,57,58,59,60,108,110,111,112,123,129,142,143,144,145,146,],[-74,-51,-55,-54,-58,-56,-77,-75,-53,-52,-59,-60,-57,-78,-76,126,126,-61,-63,-69,126,-65,-68,-66,-64,-62,]),'INT':([0,5,17,18,37,38,61,62,66,67,70,71,72,74,75,78,79,80,81,83,84,85,90,95,100,102,104,106,120,122,140,150,151,152,156,158,160,161,164,168,170,174,],[3,3,-2,-3,-4,-5,3,3,3,3,-26,-22,-27,-25,-23,-30,-28,-24,-18,-29,3,3,-19,-32,3,3,-48,-49,3,-47,-50,-35,-33,-34,-41,-42,-40,-36,-45,-41,-37,-46,]),'NOT':([94,101,107,109,124,125,126,127,128,132,133,141,157,],[107,107,107,107,-73,107,-71,-70,-72,107,107,107,107,]),'ELSE':([140,156,],[-50,162,]),'CLOSING_BRACES':([17,18,37,38,61,62,66,67,70,71,72,74,75,78,79,80,81,83,84,85,90,95,100,102,104,106,120,122,140,150,151,152,156,158,160,161,164,168,170,174,],[-2,-3,-4,-5,-6,-6,89,-21,-26,-22,-27,-25,-23,-30,-28,-24,-18,-29,99,-6,-19,-32,118,-6,-48,-49,140,-47,-50,-35,-33,-34,-41,-42,-40,-36,-45,-41,-37,-46,]),'BIGGER_THAN':([15,26,27,28,29,31,47,48,54,55,56,57,58,59,60,108,110,111,112,123,129,142,143,144,145,146,],[-74,-51,-55,-54,-58,-56,-77,-75,-53,-52,-59,-60,-57,-78,-76,128,128,-61,-63,-69,128,-65,-68,-66,-64,-62,]),'SEMICOLON':([6,7,8,9,15,19,20,25,26,27,28,29,31,35,36,47,48,54,55,56,57,58,59,60,73,91,93,105,108,111,112,123,136,137,138,142,143,144,145,146,149,159,163,],[-7,-9,17,18,-74,37,38,-11,-51,-55,-54,-58,-56,-8,-10,-77,-75,-53,-52,-59,-60,-57,-78,-76,95,104,106,122,-67,-61,-63,-69,150,151,152,-65,-68,-66,-64,-62,157,164,167,]),'OR':([15,26,27,28,29,31,47,48,54,55,56,57,58,59,60,108,111,112,113,119,123,130,142,143,144,145,146,155,163,],[-74,-51,-55,-54,-58,-56,-77,-75,-53,-52,-59,-60,-57,-78,-76,-67,-61,-63,133,133,133,133,-65,-68,-66,-64,-62,133,133,]),'CLOSING_BRACKET':([32,33,49,50,],[47,48,59,60,]),'OPEN_PARENTH':([13,21,23,30,41,42,43,44,45,64,68,69,76,77,82,86,87,94,97,98,101,107,109,121,124,126,127,128,131,132,133,135,141,157,171,],[30,39,40,30,53,30,30,30,30,-41,92,94,96,97,98,101,-43,109,30,30,109,109,109,141,-73,-71,-70,-72,30,109,109,30,109,109,30,]),'CLOSING_PARENTH':([15,26,27,28,29,31,39,40,46,47,48,53,54,55,56,57,58,59,60,92,108,111,112,113,115,116,117,119,123,129,130,142,143,144,145,146,155,172,],[-74,-51,-55,-54,-58,-56,51,52,58,-77,-75,63,-53,-52,-59,-60,-57,-78,-76,105,-67,-61,-63,134,136,137,138,139,-69,58,143,-65,-68,-66,-64,-62,159,173,]),'WHILE':([17,18,37,38,61,62,66,67,70,71,72,74,75,78,79,80,81,83,84,85,90,95,100,102,103,104,106,120,122,140,150,151,152,156,158,160,161,164,168,170,174,],[-2,-3,-4,-5,64,64,64,-21,-26,-22,-27,-25,-23,-30,-28,-24,-18,-29,64,64,-19,-32,64,64,121,-48,-49,64,-47,-50,-35,-33,-34,-41,-42,-40,-36,-45,-41,-37,-46,]),'$end':([4,22,99,],[0,-1,-15,]),'IF':([17,18,37,38,61,62,66,67,70,71,72,74,75,78,79,80,81,83,84,85,90,95,100,102,104,106,120,122,140,150,151,152,156,158,160,161,164,168,170,174,],[-2,-3,-4,-5,69,69,69,-21,-26,-22,-27,-25,-23,-30,-28,-24,-18,-29,69,69,-19,-32,69,69,-48,-49,69,-47,-50,-35,-33,-34,-41,-42,-40,-36,-45,-41,-37,-46,]),'COMA':([6,7,8,15,19,25,26,27,28,29,31,35,36,47,48,54,55,56,57,58,59,60,],[-7,-9,16,-74,16,-11,-51,-55,-54,-58,-56,-8,-10,-77,-75,-53,-52,-59,-60,-57,-78,-76,]),'PLUS':([15,25,26,27,28,29,31,46,47,48,54,55,56,57,58,59,60,110,115,116,129,144,149,172,],[-74,43,-51,-55,-54,-58,-56,43,-77,-75,-53,-52,-59,-60,-57,-78,-76,43,43,43,43,43,43,43,]),'DOUBLE':([0,5,17,18,37,38,61,62,66,67,70,71,72,74,75,78,79,80,81,83,84,85,90,95,100,102,104,106,120,122,140,150,151,152,156,158,160,161,164,168,170,174,],[1,1,-2,-3,-4,-5,1,1,1,1,-26,-22,-27,-25,-23,-30,-28,-24,-18,-29,1,1,-19,-32,1,1,-48,-49,1,-47,-50,-35,-33,-34,-41,-42,-40,-36,-45,-41,-37,-46,]),'FUNCTION':([0,5,12,17,18,37,38,89,118,],[-6,11,24,-2,-3,-4,-5,-12,-13,]),'MULTIPLY':([15,26,27,28,29,31,47,48,54,55,56,57,58,59,60,],[-74,44,-55,-54,-58,-56,-77,-75,44,44,-59,-60,-57,-78,-76,]),'EQUAL_EQUAL':([15,26,27,28,29,31,47,48,54,55,56,57,58,59,60,108,110,111,112,123,129,142,143,144,145,146,],[-74,-51,-55,-54,-58,-56,-77,-75,-53,-52,-59,-60,-57,-78,-76,124,124,-61,-63,-69,124,-65,-68,-66,-64,-62,]),'PLUSPLUS':([68,],[91,]),'PRINT':([17,18,37,38,61,62,66,67,70,71,72,74,75,78,79,80,81,83,84,85,90,95,100,102,104,106,120,122,140,150,151,152,156,158,160,161,164,168,170,174,],[-2,-3,-4,-5,82,82,82,-21,-26,-22,-27,-25,-23,-30,-28,-24,-18,-29,82,82,-19,-32,82,82,-48,-49,82,-47,-50,-35,-33,-34,-41,-42,-40,-36,-45,-41,-37,-46,]),'FOR':([17,18,37,38,61,62,66,67,70,71,72,74,75,78,79,80,81,83,84,85,90,95,100,102,104,106,120,122,140,150,151,152,156,158,160,161,164,168,170,174,],[-2,-3,-4,-5,76,76,76,-21,-26,-22,-27,-25,-23,-30,-28,-24,-18,-29,76,76,-19,-32,76,76,-48,-49,76,-47,-50,-35,-33,-34,-41,-42,-40,-36,-45,-41,-37,-46,]),'NOT_EQUAL':([15,26,27,28,29,31,47,48,54,55,56,57,58,59,60,108,110,111,112,123,129,142,143,144,145,146,],[-74,-51,-55,-54,-58,-56,-77,-75,-53,-52,-59,-60,-57,-78,-76,127,127,-61,-63,-69,127,-65,-68,-66,-64,-62,]),'ID':([1,2,3,10,11,13,14,16,17,18,24,30,34,37,38,42,43,44,45,61,62,66,67,70,71,72,74,75,78,79,80,81,83,84,85,90,94,95,96,97,98,100,101,102,104,106,107,109,120,122,124,126,127,128,131,132,133,135,140,141,150,151,152,156,157,158,160,161,164,167,168,170,171,174,],[-17,6,-16,6,21,27,32,35,-2,-3,41,27,49,-4,-5,27,27,27,27,68,68,68,-21,-26,-22,-27,-25,-23,-30,-28,-24,-18,-29,68,68,-19,27,-32,114,27,27,68,27,68,-48,-49,27,27,68,-47,-73,-71,-70,-72,27,27,27,27,-50,27,-35,-33,-34,-41,27,-42,-40,-36,-45,169,-41,-37,27,-46,]),'CONSTANT':([13,14,30,34,42,43,44,45,94,97,98,101,107,109,124,126,127,128,131,132,133,135,141,157,171,],[28,33,28,50,28,28,28,28,28,28,28,28,28,28,-73,-71,-70,-72,28,28,28,28,28,28,28,]),'MAIN':([0,5,12,17,18,37,38,89,118,],[-6,-14,23,-2,-3,-4,-5,-12,-13,]),'STRING':([98,],[117,]),'DO':([17,18,37,38,61,62,66,67,70,71,72,74,75,78,79,80,81,83,84,85,90,95,100,102,104,106,120,122,140,150,151,152,156,158,160,161,164,168,170,174,],[-2,-3,-4,-5,65,65,65,-21,-26,-22,-27,-25,-23,-30,-28,-24,-18,-29,65,65,-19,-32,65,65,-48,-49,65,-47,-50,-35,-33,-34,-41,-42,-40,-36,-45,-41,-37,-46,]),'MINUS':([15,25,26,27,28,29,31,46,47,48,54,55,56,57,58,59,60,110,115,116,129,144,149,172,],[-74,42,-51,-55,-54,-58,-56,42,-77,-75,-53,-52,-59,-60,-57,-78,-76,42,42,42,42,42,42,42,]),'MINUSMINUS':([68,],[93,]),'AND':([15,26,27,28,29,31,47,48,54,55,56,57,58,59,60,108,111,112,123,142,143,144,145,146,],[-74,-51,-55,-54,-58,-56,-77,-75,-53,-52,-59,-60,-57,-78,-76,-67,132,-63,-69,-65,-68,-66,-64,132,]),'OPEN_BRACKET':([6,15,27,47,48,59,60,],[14,34,14,-77,-75,-78,-76,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'TA':([13,30,42,43,94,97,98,101,107,109,131,132,133,135,141,157,171,],[26,26,54,55,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'IF_AUX2':([162,],[166,]),'INC_STAT':([61,62,66,84,85,100,102,120,],[78,78,78,78,78,78,78,78,]),'FORSTAT':([61,62,66,84,85,100,102,120,],[79,79,79,79,79,79,79,79,]),'TIPO':([0,5,61,62,66,67,84,85,100,102,120,],[2,10,2,2,2,10,2,2,2,2,2,]),'OPERATORS':([108,110,129,],[125,131,131,]),'DECLARE':([2,10,],[8,19,]),'PROGRAMA':([0,],[4,]),'NL':([94,101,107,109,125,132,133,141,157,],[108,108,108,108,142,108,108,108,108,]),'empty':([64,65,134,139,156,162,168,],[87,87,147,153,160,165,160,]),'FUNC':([5,],[12,]),'FA':([13,30,42,43,44,45,94,97,98,101,107,109,131,132,133,135,141,157,171,],[29,29,29,29,56,57,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'IN_S':([88,148,154,166,173,],[103,156,158,168,174,]),'STATEMENTS':([61,62,66,84,85,100,102,120,],[81,81,90,90,81,90,81,90,]),'IF_AUX3':([156,168,],[161,170,]),'VAR':([0,61,62,66,84,85,100,102,120,],[5,67,67,67,67,67,67,67,67,]),'EA':([13,30,94,97,98,101,107,109,131,132,133,135,141,157,171,],[25,46,110,115,116,110,110,129,144,110,110,149,110,110,172,]),'M':([12,],[22,]),'WHILESTAT':([61,62,66,84,85,100,102,120,],[70,70,70,70,70,70,70,70,]),'FL':([94,101,107,109,132,133,141,157,],[112,112,112,112,145,112,112,112,]),'WHILE_AUX_2':([139,],[154,]),'IDSTAT':([61,62,66,84,85,100,102,120,],[71,71,71,71,71,71,71,71,]),'DOSTAT':([61,62,66,84,85,100,102,120,],[72,72,72,72,72,72,72,72,]),'MAT_BRACKET':([6,27,],[15,15,]),'ASSIGN':([2,10,16,61,62,66,84,85,100,102,120,],[7,7,36,73,73,73,73,73,73,73,73,]),'S':([61,62,85,102,],[66,84,100,120,]),'WHILE_AUX_1':([64,65,],[86,88,]),'IFSTAT':([61,62,66,84,85,100,102,120,],[74,74,74,74,74,74,74,74,]),'PRINTSTAT':([61,62,66,84,85,100,102,120,],[75,75,75,75,75,75,75,75,]),'READSTAT':([61,62,66,84,85,100,102,120,],[80,80,80,80,80,80,80,80,]),'EL':([94,101,107,109,141,157,],[113,119,123,130,155,163,]),'IF_AUX1':([134,],[148,]),'TL':([94,101,107,109,133,141,157,],[111,111,111,111,146,111,111,]),'FUNCSTAT':([61,62,66,84,85,100,102,120,],[83,83,83,83,83,83,83,83,]),'MAT':([2,10,13,30,42,43,44,45,94,97,98,101,107,109,131,132,133,135,141,157,171,],[9,20,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> VAR FUNC M','PROGRAMA',3,'p_PROGRAMA','main.py',282),
  ('VAR -> TIPO DECLARE SEMICOLON','VAR',3,'p_VAR','main.py',288),
  ('VAR -> TIPO MAT SEMICOLON','VAR',3,'p_VAR','main.py',289),
  ('VAR -> VAR TIPO DECLARE SEMICOLON','VAR',4,'p_VAR','main.py',290),
  ('VAR -> VAR TIPO MAT SEMICOLON','VAR',4,'p_VAR','main.py',291),
  ('VAR -> <empty>','VAR',0,'p_VAR','main.py',292),
  ('DECLARE -> ID','DECLARE',1,'p_DECLARE','main.py',308),
  ('DECLARE -> DECLARE COMA ID','DECLARE',3,'p_DECLARE','main.py',309),
  ('DECLARE -> ASSIGN','DECLARE',1,'p_DECLARE','main.py',310),
  ('DECLARE -> DECLARE COMA ASSIGN','DECLARE',3,'p_DECLARE','main.py',311),
  ('ASSIGN -> ID EQUAL EA','ASSIGN',3,'p_ASSIGN','main.py',328),
  ('FUNC -> FUNCTION ID OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES','FUNC',7,'p_FUNC','main.py',346),
  ('FUNC -> FUNC FUNCTION ID OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES','FUNC',8,'p_FUNC','main.py',347),
  ('FUNC -> <empty>','FUNC',0,'p_FUNC','main.py',348),
  ('M -> MAIN OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES','M',6,'p_M','main.py',353),
  ('TIPO -> INT','TIPO',1,'p_TIPO','main.py',357),
  ('TIPO -> DOUBLE','TIPO',1,'p_TIPO','main.py',358),
  ('S -> STATEMENTS','S',1,'p_S','main.py',370),
  ('S -> S STATEMENTS','S',2,'p_S','main.py',371),
  ('S -> <empty>','S',0,'p_S','main.py',372),
  ('STATEMENTS -> VAR','STATEMENTS',1,'p_STATEMENTS','main.py',376),
  ('STATEMENTS -> IDSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',377),
  ('STATEMENTS -> PRINTSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',378),
  ('STATEMENTS -> READSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',379),
  ('STATEMENTS -> IFSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',380),
  ('STATEMENTS -> WHILESTAT','STATEMENTS',1,'p_STATEMENTS','main.py',381),
  ('STATEMENTS -> DOSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',382),
  ('STATEMENTS -> FORSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',383),
  ('STATEMENTS -> FUNCSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',384),
  ('STATEMENTS -> INC_STAT','STATEMENTS',1,'p_STATEMENTS','main.py',385),
  ('STATEMENTS -> <empty>','STATEMENTS',0,'p_STATEMENTS','main.py',386),
  ('IDSTAT -> ASSIGN SEMICOLON','IDSTAT',2,'p_IDSTAT','main.py',391),
  ('PRINTSTAT -> PRINT OPEN_PARENTH EA CLOSING_PARENTH SEMICOLON','PRINTSTAT',5,'p_PRINTSTAT','main.py',397),
  ('PRINTSTAT -> PRINT OPEN_PARENTH STRING CLOSING_PARENTH SEMICOLON','PRINTSTAT',5,'p_PRINTSTAT','main.py',398),
  ('READSTAT -> READ OPEN_PARENTH EA CLOSING_PARENTH SEMICOLON','READSTAT',5,'p_READSTAT','main.py',403),
  ('IFSTAT -> IF OPEN_PARENTH EL CLOSING_PARENTH IF_AUX1 IN_S IF_AUX3','IFSTAT',7,'p_IFSTAT','main.py',408),
  ('IFSTAT -> IF OPEN_PARENTH EL CLOSING_PARENTH IF_AUX1 IN_S ELSE IF_AUX2 IN_S IF_AUX3','IFSTAT',10,'p_IFSTAT','main.py',409),
  ('IF_AUX1 -> empty','IF_AUX1',1,'p_IF_AUX1','main.py',415),
  ('IF_AUX2 -> empty','IF_AUX2',1,'p_IF_AUX2','main.py',436),
  ('IF_AUX3 -> empty','IF_AUX3',1,'p_IF_AUX3','main.py',450),
  ('empty -> <empty>','empty',0,'p_empty','main.py',461),
  ('WHILESTAT -> WHILE WHILE_AUX_1 OPEN_PARENTH EL CLOSING_PARENTH WHILE_AUX_2 IN_S','WHILESTAT',7,'p_WHILESTAT','main.py',466),
  ('WHILE_AUX_1 -> empty','WHILE_AUX_1',1,'p_WHILE_AUX_1','main.py',484),
  ('WHILE_AUX_2 -> empty','WHILE_AUX_2',1,'p_WHILE_AUX_2','main.py',494),
  ('DOSTAT -> DO WHILE_AUX_1 IN_S WHILE OPEN_PARENTH EL CLOSING_PARENTH SEMICOLON','DOSTAT',8,'p_DOSTAT','main.py',512),
  ('FORSTAT -> FOR OPEN_PARENTH ID EQUAL EA SEMICOLON EL SEMICOLON ID EQUAL EA CLOSING_PARENTH IN_S','FORSTAT',13,'p_FORSTAT','main.py',532),
  ('FUNCSTAT -> ID OPEN_PARENTH CLOSING_PARENTH SEMICOLON','FUNCSTAT',4,'p_FUNCSTAT','main.py',538),
  ('INC_STAT -> ID PLUSPLUS SEMICOLON','INC_STAT',3,'p_INC_STAT','main.py',543),
  ('INC_STAT -> ID MINUSMINUS SEMICOLON','INC_STAT',3,'p_INC_STAT','main.py',544),
  ('IN_S -> OPEN_BRACES S CLOSING_BRACES','IN_S',3,'p_IN_S','main.py',549),
  ('EA -> TA','EA',1,'p_EA','main.py',556),
  ('EA -> EA PLUS TA','EA',3,'p_EA','main.py',557),
  ('EA -> EA MINUS TA','EA',3,'p_EA','main.py',558),
  ('FA -> CONSTANT','FA',1,'p_FA','main.py',594),
  ('FA -> ID','FA',1,'p_FA','main.py',595),
  ('FA -> MAT','FA',1,'p_FA','main.py',596),
  ('FA -> OPEN_PARENTH EA CLOSING_PARENTH','FA',3,'p_FA','main.py',597),
  ('TA -> FA','TA',1,'p_TA','main.py',617),
  ('TA -> TA MULTIPLY FA','TA',3,'p_TA','main.py',618),
  ('TA -> TA DIVISION FA','TA',3,'p_TA','main.py',619),
  ('EL -> TL','EL',1,'p_EL','main.py',655),
  ('EL -> EL OR TL','EL',3,'p_EL','main.py',656),
  ('TL -> FL','TL',1,'p_TL','main.py',685),
  ('TL -> TL AND FL','TL',3,'p_TL','main.py',686),
  ('FL -> NL OPERATORS NL','FL',3,'p_FL','main.py',711),
  ('FL -> EA OPERATORS EA','FL',3,'p_FL','main.py',712),
  ('FL -> NL','FL',1,'p_FL','main.py',713),
  ('FL -> OPEN_PARENTH EL CLOSING_PARENTH','FL',3,'p_FL','main.py',714),
  ('NL -> NOT EL','NL',2,'p_NL','main.py',765),
  ('OPERATORS -> NOT_EQUAL','OPERATORS',1,'p_OPERATORS','main.py',788),
  ('OPERATORS -> LOWER_THAN','OPERATORS',1,'p_OPERATORS','main.py',789),
  ('OPERATORS -> BIGGER_THAN','OPERATORS',1,'p_OPERATORS','main.py',790),
  ('OPERATORS -> EQUAL_EQUAL','OPERATORS',1,'p_OPERATORS','main.py',791),
  ('MAT -> ID MAT_BRACKET','MAT',2,'p_MAT','main.py',797),
  ('MAT_BRACKET -> OPEN_BRACKET CONSTANT CLOSING_BRACKET','MAT_BRACKET',3,'p_MAT_BRACKET','main.py',804),
  ('MAT_BRACKET -> MAT_BRACKET OPEN_BRACKET CONSTANT CLOSING_BRACKET','MAT_BRACKET',4,'p_MAT_BRACKET','main.py',805),
  ('MAT_BRACKET -> OPEN_BRACKET ID CLOSING_BRACKET','MAT_BRACKET',3,'p_MAT_BRACKET','main.py',806),
  ('MAT_BRACKET -> MAT_BRACKET OPEN_BRACKET ID CLOSING_BRACKET','MAT_BRACKET',4,'p_MAT_BRACKET','main.py',807),
]
