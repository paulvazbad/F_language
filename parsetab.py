
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'PROGRAMAleftPLUSMINUSAND BIGGER_THAN CLOSING_BRACES CLOSING_BRACKET CLOSING_PARENTH COMA COMMENT CONSTANT DIVISION DO DOUBLE ELSE EQUAL EQUAL_EQUAL FOR FUNCTION ID IF INT LOWER_THAN MAIN MINUS MINUSMINUS MULTIPLY NOT NOT_EQUAL OPEN_BRACES OPEN_BRACKET OPEN_PARENTH OR PLUS PLUSPLUS PRINT READ SEMICOLON STRING WHILE\n\tPROGRAMA : VAR FUNC M\n\t\n\tVAR : TIPO DECLARE SEMICOLON\n\t\t| TIPO MAT SEMICOLON\n\t\t| VAR TIPO DECLARE SEMICOLON\n\t\t| VAR TIPO MAT SEMICOLON\n\t\t|\n\t\n\tDECLARE : ID\n\t\t\t| DECLARE COMA ID\n\t\t\t| ASSIGN\n\t\t\t| DECLARE COMA ASSIGN\n\t\n\tASSIGN : ID EQUAL EA\n\t\n\tFUNC : FUNCTION ID OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES\n\t\t| FUNC FUNCTION ID OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES\n\t\t|\n\t\n\tM    : MAIN OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES\n\t\n\tTIPO : INT\n\t\t| DOUBLE\n\t\n\tS : STATEMENTS\n\t| S STATEMENTS\n\t|\n\t\n\tSTATEMENTS : VAR \n\t\t\t| IDSTAT\n\t\t\t| PRINTSTAT\n\t\t\t| READSTAT\n\t\t\t| IFSTAT\n\t\t\t| WHILESTAT\n\t\t\t| DOSTAT\n\t\t\t| FORSTAT\n\t\t\t| FUNCSTAT\n\t\t\t| INC_STAT\n\t\t\t| \n\t\n\tIDSTAT : ASSIGN SEMICOLON\n\t\t\n\t\n\tPRINTSTAT : PRINT OPEN_PARENTH EA CLOSING_PARENTH SEMICOLON\n\t\t\t| PRINT OPEN_PARENTH STRING CLOSING_PARENTH SEMICOLON\n\t\n\tREADSTAT : READ OPEN_PARENTH EA CLOSING_PARENTH SEMICOLON\n\t\n\tIFSTAT : IF OPEN_PARENTH EL CLOSING_PARENTH IN_S\n\t\t| IF OPEN_PARENTH EL CLOSING_PARENTH IN_S ELSE AUX2 IN_S\n\tempty :\n\tAUX2 : empty\n\t\n\tWHILESTAT : WHILE OPEN_PARENTH EL CLOSING_PARENTH IN_S\n\t\n\tDOSTAT : DO IN_S WHILE OPEN_PARENTH EL CLOSING_PARENTH SEMICOLON\n\t\n\tFORSTAT : FOR OPEN_PARENTH ID EQUAL EA SEMICOLON EL SEMICOLON ID EQUAL EA CLOSING_PARENTH IN_S\n\t\n\tFUNCSTAT : ID OPEN_PARENTH CLOSING_PARENTH SEMICOLON\n\t\n\tINC_STAT : ID PLUSPLUS SEMICOLON\n\t\t\t| ID MINUSMINUS SEMICOLON\n\t\n\tIN_S : OPEN_BRACES S CLOSING_BRACES\n\t\n\tEA : TA\n\t| EA PLUS TA\n\t| EA MINUS TA\n\t\n\tFA  : CONSTANT\n\t\t| ID\n\t\t| MAT\n\t\t| OPEN_PARENTH EA CLOSING_PARENTH\n\t\n\tTA : FA\n\t| TA MULTIPLY FA\n\t| TA DIVISION FA\n\t\n\tEL : TL\n\t| EL OR TL\n\t\n\tTL : FL\n\t| TL AND FL\n\t\n\tFL : NL OPERATORS NL\n\t| EA OPERATORS EA\n\t| NL\n\t| OPEN_PARENTH EL CLOSING_PARENTH\n\t\n\tNL : NOT EL\n\t\n\tOPERATORS : NOT_EQUAL\n\t\t\t| LOWER_THAN\n\t\t\t| BIGGER_THAN\n\t\t\t| EQUAL_EQUAL\n\t\n\tMAT : ID MAT_BRACKET\n\t\n\tMAT_BRACKET : OPEN_BRACKET CONSTANT CLOSING_BRACKET\n\t\t\t\t| MAT_BRACKET OPEN_BRACKET CONSTANT CLOSING_BRACKET\n\t\t\t\t| OPEN_BRACKET ID CLOSING_BRACKET\n\t\t\t\t| MAT_BRACKET OPEN_BRACKET ID CLOSING_BRACKET\n\t'
    
_lr_action_items = {'CONSTANT':([19,20,38,39,47,48,49,50,87,91,92,96,108,110,119,123,125,128,130,131,132,134,136,151,161,],[30,32,32,52,32,32,32,32,32,32,32,32,32,32,32,32,32,-68,-67,-69,-66,32,32,32,32,]),'ELSE':([122,150,],[-46,153,]),'MULTIPLY':([21,32,33,35,36,37,45,46,57,58,59,60,61,62,63,],[-70,-50,-51,-54,49,-52,-71,-73,49,49,-55,-56,-53,-72,-74,]),'OPEN_BRACES':([42,44,55,69,135,138,153,156,157,163,],[54,56,84,88,88,88,-38,88,-39,88,]),'FOR':([22,24,26,27,54,56,64,65,67,71,72,73,75,78,79,81,82,83,84,85,88,90,97,99,104,114,116,122,137,140,141,143,148,150,155,159,164,],[-3,-2,-5,-4,66,66,-30,-24,-29,-28,-21,-18,-26,-23,-27,-22,66,-25,66,66,66,-32,-19,66,66,-44,-45,-46,-43,-34,-33,-35,-40,-36,-41,-37,-42,]),'CLOSING_BRACKET':([30,31,52,53,],[45,46,62,63,]),'AND':([21,32,33,35,36,37,45,46,57,58,59,60,61,62,63,107,109,113,133,144,145,146,147,149,],[-70,-50,-51,-54,-47,-52,-71,-73,-48,-49,-55,-56,-53,-72,-74,125,-63,-59,-65,-60,-64,-61,125,-62,]),'MINUS':([21,32,33,34,35,36,37,45,46,51,57,58,59,60,61,62,63,103,106,112,127,139,149,162,],[-70,-50,-51,48,-54,-47,-52,-71,-73,48,-48,-49,-55,-56,-53,-72,-74,48,48,48,48,48,48,48,]),'DOUBLE':([0,3,22,24,26,27,54,56,64,65,67,71,72,73,75,78,79,81,82,83,84,85,88,90,97,99,104,114,116,122,137,140,141,143,148,150,155,159,164,],[5,5,-3,-2,-5,-4,5,5,-30,-24,-29,-28,5,-18,-26,-23,-27,-22,5,-25,5,5,5,-32,-19,5,5,-44,-45,-46,-43,-34,-33,-35,-40,-36,-41,-37,-42,]),'DIVISION':([21,32,33,35,36,37,45,46,57,58,59,60,61,62,63,],[-70,-50,-51,-54,50,-52,-71,-73,50,50,-55,-56,-53,-72,-74,]),'PLUS':([21,32,33,34,35,36,37,45,46,51,57,58,59,60,61,62,63,103,106,112,127,139,149,162,],[-70,-50,-51,47,-54,-47,-52,-71,-73,47,-48,-49,-55,-56,-53,-72,-74,47,47,47,47,47,47,47,]),'CLOSING_PARENTH':([21,25,29,32,33,35,36,37,43,45,46,51,57,58,59,60,61,62,63,94,102,103,106,107,109,111,113,117,126,127,133,142,144,145,146,147,149,162,],[-70,42,44,-50,-51,-54,-47,-52,55,-71,-73,61,-48,-49,-55,-56,-53,-72,-74,115,120,121,124,-57,-63,135,-59,138,145,61,-65,152,-60,-64,-61,-58,-62,163,]),'DO':([22,24,26,27,54,56,64,65,67,71,72,73,75,78,79,81,82,83,84,85,88,90,97,99,104,114,116,122,137,140,141,143,148,150,155,159,164,],[-3,-2,-5,-4,69,69,-30,-24,-29,-28,-21,-18,-26,-23,-27,-22,69,-25,69,69,69,-32,-19,69,69,-44,-45,-46,-43,-34,-33,-35,-40,-36,-41,-37,-42,]),'OPEN_PARENTH':([13,17,20,28,38,47,48,49,50,66,68,74,76,77,80,87,91,92,96,105,108,110,119,123,125,128,130,131,132,134,136,151,161,],[25,29,38,43,38,38,38,38,38,86,87,91,92,94,96,38,38,108,108,123,108,108,38,108,108,-68,-67,-69,-66,108,38,108,38,]),'STRING':([87,],[102,]),'MAIN':([0,3,8,22,24,26,27,98,118,],[-6,-14,17,-3,-2,-5,-4,-12,-13,]),'WHILE':([22,24,26,27,54,56,64,65,67,71,72,73,75,78,79,81,82,83,84,85,88,89,90,97,99,104,114,116,122,137,140,141,143,148,150,155,159,164,],[-3,-2,-5,-4,76,76,-30,-24,-29,-28,-21,-18,-26,-23,-27,-22,76,-25,76,76,76,105,-32,-19,76,76,-44,-45,-46,-43,-34,-33,-35,-40,-36,-41,-37,-42,]),'COMA':([9,11,12,15,21,32,33,34,35,36,37,40,41,45,46,57,58,59,60,61,62,63,],[-7,23,-9,23,-70,-50,-51,-11,-54,-47,-52,-10,-8,-71,-73,-48,-49,-55,-56,-53,-72,-74,]),'$end':([1,18,100,],[0,-1,-15,]),'FUNCTION':([0,3,8,22,24,26,27,98,118,],[-6,6,16,-3,-2,-5,-4,-12,-13,]),'ID':([2,4,5,6,7,16,19,20,22,23,24,26,27,38,39,47,48,49,50,54,56,64,65,67,71,72,73,75,78,79,81,82,83,84,85,86,87,88,90,91,92,96,97,99,104,108,110,114,116,119,122,123,125,128,130,131,132,134,136,137,140,141,143,148,150,151,155,158,159,161,164,],[-16,9,-17,13,9,28,31,33,-3,41,-2,-5,-4,33,53,33,33,33,33,77,77,-30,-24,-29,-28,-21,-18,-26,-23,-27,-22,77,-25,77,77,101,33,77,-32,33,33,33,-19,77,77,33,33,-44,-45,33,-46,33,33,-68,-67,-69,-66,33,33,-43,-34,-33,-35,-40,-36,33,-41,160,-37,33,-42,]),'OR':([21,32,33,35,36,37,45,46,57,58,59,60,61,62,63,107,109,111,113,117,126,133,142,144,145,146,147,149,154,],[-70,-50,-51,-54,-47,-52,-71,-73,-48,-49,-55,-56,-53,-72,-74,-57,-63,134,-59,134,134,134,134,-60,-64,-61,-58,-62,134,]),'INT':([0,3,22,24,26,27,54,56,64,65,67,71,72,73,75,78,79,81,82,83,84,85,88,90,97,99,104,114,116,122,137,140,141,143,148,150,155,159,164,],[2,2,-3,-2,-5,-4,2,2,-30,-24,-29,-28,2,-18,-26,-23,-27,-22,2,-25,2,2,2,-32,-19,2,2,-44,-45,-46,-43,-34,-33,-35,-40,-36,-41,-37,-42,]),'NOT':([92,96,108,110,123,125,128,129,130,131,132,134,151,],[110,110,110,110,110,110,-68,110,-67,-69,-66,110,110,]),'SEMICOLON':([9,10,11,12,14,15,21,32,33,34,35,36,37,40,41,45,46,57,58,59,60,61,62,63,70,93,95,107,109,113,115,120,121,124,133,139,144,145,146,147,149,152,154,],[-7,22,24,-9,26,27,-70,-50,-51,-11,-54,-47,-52,-10,-8,-71,-73,-48,-49,-55,-56,-53,-72,-74,90,114,116,-57,-63,-59,137,140,141,143,-65,151,-60,-64,-61,-58,-62,155,158,]),'NOT_EQUAL':([21,32,33,35,36,37,45,46,57,58,59,60,61,62,63,107,109,112,113,127,133,144,145,146,147,149,],[-70,-50,-51,-54,-47,-52,-71,-73,-48,-49,-55,-56,-53,-72,-74,-57,132,132,-59,132,-65,-60,-64,-61,-58,-62,]),'BIGGER_THAN':([21,32,33,35,36,37,45,46,57,58,59,60,61,62,63,107,109,112,113,127,133,144,145,146,147,149,],[-70,-50,-51,-54,-47,-52,-71,-73,-48,-49,-55,-56,-53,-72,-74,-57,128,128,-59,128,-65,-60,-64,-61,-58,-62,]),'CLOSING_BRACES':([22,24,26,27,54,56,64,65,67,71,72,73,75,78,79,81,82,83,84,85,88,90,97,99,104,114,116,122,137,140,141,143,148,150,155,159,164,],[-3,-2,-5,-4,-6,-6,-30,-24,-29,-28,-21,-18,-26,-23,-27,-22,98,-25,-6,100,-6,-32,-19,118,122,-44,-45,-46,-43,-34,-33,-35,-40,-36,-41,-37,-42,]),'PRINT':([22,24,26,27,54,56,64,65,67,71,72,73,75,78,79,81,82,83,84,85,88,90,97,99,104,114,116,122,137,140,141,143,148,150,155,159,164,],[-3,-2,-5,-4,68,68,-30,-24,-29,-28,-21,-18,-26,-23,-27,-22,68,-25,68,68,68,-32,-19,68,68,-44,-45,-46,-43,-34,-33,-35,-40,-36,-41,-37,-42,]),'OPEN_BRACKET':([9,21,33,45,46,62,63,],[19,39,19,-71,-73,-72,-74,]),'IF':([22,24,26,27,54,56,64,65,67,71,72,73,75,78,79,81,82,83,84,85,88,90,97,99,104,114,116,122,137,140,141,143,148,150,155,159,164,],[-3,-2,-5,-4,80,80,-30,-24,-29,-28,-21,-18,-26,-23,-27,-22,80,-25,80,80,80,-32,-19,80,80,-44,-45,-46,-43,-34,-33,-35,-40,-36,-41,-37,-42,]),'READ':([22,24,26,27,54,56,64,65,67,71,72,73,75,78,79,81,82,83,84,85,88,90,97,99,104,114,116,122,137,140,141,143,148,150,155,159,164,],[-3,-2,-5,-4,74,74,-30,-24,-29,-28,-21,-18,-26,-23,-27,-22,74,-25,74,74,74,-32,-19,74,74,-44,-45,-46,-43,-34,-33,-35,-40,-36,-41,-37,-42,]),'EQUAL':([9,41,77,101,160,],[20,20,20,119,161,]),'EQUAL_EQUAL':([21,32,33,35,36,37,45,46,57,58,59,60,61,62,63,107,109,112,113,127,133,144,145,146,147,149,],[-70,-50,-51,-54,-47,-52,-71,-73,-48,-49,-55,-56,-53,-72,-74,-57,131,131,-59,131,-65,-60,-64,-61,-58,-62,]),'PLUSPLUS':([77,],[93,]),'LOWER_THAN':([21,32,33,35,36,37,45,46,57,58,59,60,61,62,63,107,109,112,113,127,133,144,145,146,147,149,],[-70,-50,-51,-54,-47,-52,-71,-73,-48,-49,-55,-56,-53,-72,-74,-57,130,130,-59,130,-65,-60,-64,-61,-58,-62,]),'MINUSMINUS':([77,],[95,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'empty':([153,],[157,]),'INC_STAT':([54,56,82,84,85,88,99,104,],[64,64,64,64,64,64,64,64,]),'READSTAT':([54,56,82,84,85,88,99,104,],[65,65,65,65,65,65,65,65,]),'TL':([92,96,108,110,123,134,151,],[107,107,107,107,107,147,107,]),'FUNCSTAT':([54,56,82,84,85,88,99,104,],[67,67,67,67,67,67,67,67,]),'TA':([20,38,47,48,87,91,92,96,108,110,119,123,125,134,136,151,161,],[36,36,57,58,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'TIPO':([0,3,54,56,72,82,84,85,88,99,104,],[4,7,4,4,7,4,4,4,4,4,4,]),'FUNC':([3,],[8,]),'IDSTAT':([54,56,82,84,85,88,99,104,],[81,81,81,81,81,81,81,81,]),'OPERATORS':([109,112,127,],[129,136,136,]),'ASSIGN':([4,7,23,54,56,82,84,85,88,99,104,],[12,12,40,70,70,70,70,70,70,70,70,]),'FORSTAT':([54,56,82,84,85,88,99,104,],[71,71,71,71,71,71,71,71,]),'VAR':([0,54,56,82,84,85,88,99,104,],[3,72,72,72,72,72,72,72,72,]),'WHILESTAT':([54,56,82,84,85,88,99,104,],[75,75,75,75,75,75,75,75,]),'MAT_BRACKET':([9,33,],[21,21,]),'STATEMENTS':([54,56,82,84,85,88,99,104,],[73,73,97,73,97,73,97,97,]),'PRINTSTAT':([54,56,82,84,85,88,99,104,],[78,78,78,78,78,78,78,78,]),'EL':([92,96,108,110,123,151,],[111,117,126,133,142,154,]),'IFSTAT':([54,56,82,84,85,88,99,104,],[83,83,83,83,83,83,83,83,]),'AUX2':([153,],[156,]),'DECLARE':([4,7,],[11,15,]),'EA':([20,38,87,91,92,96,108,110,119,123,125,134,136,151,161,],[34,51,103,106,112,112,127,112,139,112,112,112,149,112,162,]),'PROGRAMA':([0,],[1,]),'S':([54,56,84,88,],[82,85,99,104,]),'NL':([92,96,108,110,123,125,129,134,151,],[109,109,109,109,109,109,146,109,109,]),'IN_S':([69,135,138,156,163,],[89,148,150,159,164,]),'MAT':([4,7,20,38,47,48,49,50,87,91,92,96,108,110,119,123,125,134,136,151,161,],[10,14,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'DOSTAT':([54,56,82,84,85,88,99,104,],[79,79,79,79,79,79,79,79,]),'FL':([92,96,108,110,123,125,134,151,],[113,113,113,113,113,144,113,113,]),'M':([8,],[18,]),'FA':([20,38,47,48,49,50,87,91,92,96,108,110,119,123,125,134,136,151,161,],[35,35,35,35,59,60,35,35,35,35,35,35,35,35,35,35,35,35,35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> VAR FUNC M','PROGRAMA',3,'p_PROGRAMA','main.py',278),
  ('VAR -> TIPO DECLARE SEMICOLON','VAR',3,'p_VAR','main.py',284),
  ('VAR -> TIPO MAT SEMICOLON','VAR',3,'p_VAR','main.py',285),
  ('VAR -> VAR TIPO DECLARE SEMICOLON','VAR',4,'p_VAR','main.py',286),
  ('VAR -> VAR TIPO MAT SEMICOLON','VAR',4,'p_VAR','main.py',287),
  ('VAR -> <empty>','VAR',0,'p_VAR','main.py',288),
  ('DECLARE -> ID','DECLARE',1,'p_DECLARE','main.py',304),
  ('DECLARE -> DECLARE COMA ID','DECLARE',3,'p_DECLARE','main.py',305),
  ('DECLARE -> ASSIGN','DECLARE',1,'p_DECLARE','main.py',306),
  ('DECLARE -> DECLARE COMA ASSIGN','DECLARE',3,'p_DECLARE','main.py',307),
  ('ASSIGN -> ID EQUAL EA','ASSIGN',3,'p_ASSIGN','main.py',324),
  ('FUNC -> FUNCTION ID OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES','FUNC',7,'p_FUNC','main.py',342),
  ('FUNC -> FUNC FUNCTION ID OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES','FUNC',8,'p_FUNC','main.py',343),
  ('FUNC -> <empty>','FUNC',0,'p_FUNC','main.py',344),
  ('M -> MAIN OPEN_PARENTH CLOSING_PARENTH OPEN_BRACES S CLOSING_BRACES','M',6,'p_M','main.py',349),
  ('TIPO -> INT','TIPO',1,'p_TIPO','main.py',353),
  ('TIPO -> DOUBLE','TIPO',1,'p_TIPO','main.py',354),
  ('S -> STATEMENTS','S',1,'p_S','main.py',366),
  ('S -> S STATEMENTS','S',2,'p_S','main.py',367),
  ('S -> <empty>','S',0,'p_S','main.py',368),
  ('STATEMENTS -> VAR','STATEMENTS',1,'p_STATEMENTS','main.py',372),
  ('STATEMENTS -> IDSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',373),
  ('STATEMENTS -> PRINTSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',374),
  ('STATEMENTS -> READSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',375),
  ('STATEMENTS -> IFSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',376),
  ('STATEMENTS -> WHILESTAT','STATEMENTS',1,'p_STATEMENTS','main.py',377),
  ('STATEMENTS -> DOSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',378),
  ('STATEMENTS -> FORSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',379),
  ('STATEMENTS -> FUNCSTAT','STATEMENTS',1,'p_STATEMENTS','main.py',380),
  ('STATEMENTS -> INC_STAT','STATEMENTS',1,'p_STATEMENTS','main.py',381),
  ('STATEMENTS -> <empty>','STATEMENTS',0,'p_STATEMENTS','main.py',382),
  ('IDSTAT -> ASSIGN SEMICOLON','IDSTAT',2,'p_IDSTAT','main.py',387),
  ('PRINTSTAT -> PRINT OPEN_PARENTH EA CLOSING_PARENTH SEMICOLON','PRINTSTAT',5,'p_PRINTSTAT','main.py',393),
  ('PRINTSTAT -> PRINT OPEN_PARENTH STRING CLOSING_PARENTH SEMICOLON','PRINTSTAT',5,'p_PRINTSTAT','main.py',394),
  ('READSTAT -> READ OPEN_PARENTH EA CLOSING_PARENTH SEMICOLON','READSTAT',5,'p_READSTAT','main.py',399),
  ('IFSTAT -> IF OPEN_PARENTH EL CLOSING_PARENTH IN_S','IFSTAT',5,'p_IFSTAT','main.py',404),
  ('IFSTAT -> IF OPEN_PARENTH EL CLOSING_PARENTH IN_S ELSE AUX2 IN_S','IFSTAT',8,'p_IFSTAT','main.py',405),
  ('empty -> <empty>','empty',0,'p_empty','main.py',422),
  ('AUX2 -> empty','AUX2',1,'p_AUX2','main.py',427),
  ('WHILESTAT -> WHILE OPEN_PARENTH EL CLOSING_PARENTH IN_S','WHILESTAT',5,'p_WHILESTAT','main.py',432),
  ('DOSTAT -> DO IN_S WHILE OPEN_PARENTH EL CLOSING_PARENTH SEMICOLON','DOSTAT',7,'p_DOSTAT','main.py',437),
  ('FORSTAT -> FOR OPEN_PARENTH ID EQUAL EA SEMICOLON EL SEMICOLON ID EQUAL EA CLOSING_PARENTH IN_S','FORSTAT',13,'p_FORSTAT','main.py',442),
  ('FUNCSTAT -> ID OPEN_PARENTH CLOSING_PARENTH SEMICOLON','FUNCSTAT',4,'p_FUNCSTAT','main.py',448),
  ('INC_STAT -> ID PLUSPLUS SEMICOLON','INC_STAT',3,'p_INC_STAT','main.py',453),
  ('INC_STAT -> ID MINUSMINUS SEMICOLON','INC_STAT',3,'p_INC_STAT','main.py',454),
  ('IN_S -> OPEN_BRACES S CLOSING_BRACES','IN_S',3,'p_IN_S','main.py',459),
  ('EA -> TA','EA',1,'p_EA','main.py',466),
  ('EA -> EA PLUS TA','EA',3,'p_EA','main.py',467),
  ('EA -> EA MINUS TA','EA',3,'p_EA','main.py',468),
  ('FA -> CONSTANT','FA',1,'p_FA','main.py',504),
  ('FA -> ID','FA',1,'p_FA','main.py',505),
  ('FA -> MAT','FA',1,'p_FA','main.py',506),
  ('FA -> OPEN_PARENTH EA CLOSING_PARENTH','FA',3,'p_FA','main.py',507),
  ('TA -> FA','TA',1,'p_TA','main.py',527),
  ('TA -> TA MULTIPLY FA','TA',3,'p_TA','main.py',528),
  ('TA -> TA DIVISION FA','TA',3,'p_TA','main.py',529),
  ('EL -> TL','EL',1,'p_EL','main.py',565),
  ('EL -> EL OR TL','EL',3,'p_EL','main.py',566),
  ('TL -> FL','TL',1,'p_TL','main.py',602),
  ('TL -> TL AND FL','TL',3,'p_TL','main.py',603),
  ('FL -> NL OPERATORS NL','FL',3,'p_FL','main.py',628),
  ('FL -> EA OPERATORS EA','FL',3,'p_FL','main.py',629),
  ('FL -> NL','FL',1,'p_FL','main.py',630),
  ('FL -> OPEN_PARENTH EL CLOSING_PARENTH','FL',3,'p_FL','main.py',631),
  ('NL -> NOT EL','NL',2,'p_NL','main.py',682),
  ('OPERATORS -> NOT_EQUAL','OPERATORS',1,'p_OPERATORS','main.py',705),
  ('OPERATORS -> LOWER_THAN','OPERATORS',1,'p_OPERATORS','main.py',706),
  ('OPERATORS -> BIGGER_THAN','OPERATORS',1,'p_OPERATORS','main.py',707),
  ('OPERATORS -> EQUAL_EQUAL','OPERATORS',1,'p_OPERATORS','main.py',708),
  ('MAT -> ID MAT_BRACKET','MAT',2,'p_MAT','main.py',714),
  ('MAT_BRACKET -> OPEN_BRACKET CONSTANT CLOSING_BRACKET','MAT_BRACKET',3,'p_MAT_BRACKET','main.py',721),
  ('MAT_BRACKET -> MAT_BRACKET OPEN_BRACKET CONSTANT CLOSING_BRACKET','MAT_BRACKET',4,'p_MAT_BRACKET','main.py',722),
  ('MAT_BRACKET -> OPEN_BRACKET ID CLOSING_BRACKET','MAT_BRACKET',3,'p_MAT_BRACKET','main.py',723),
  ('MAT_BRACKET -> MAT_BRACKET OPEN_BRACKET ID CLOSING_BRACKET','MAT_BRACKET',4,'p_MAT_BRACKET','main.py',724),
]
